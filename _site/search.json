[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Celin‚Äôs ISSS608",
    "section": "",
    "text": "Welcome to ISSS609 Visual Analytics and Applications homepage.\nIn this website, you will find my coursework prepared for this course.\nüò∏ üêæ üêà‚Äç‚¨õ"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi, My name is Celin! This webpage will detail all my learnings from ISSS608 Visual Analytics Course."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they willl be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they willl be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-bar-chart-of-science-score-distribution",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-bar-chart-of-science-score-distribution",
    "title": "Hands-on Exercise 1",
    "section": "Plotting Bar Chart of Science score Distribution",
    "text": "Plotting Bar Chart of Science score Distribution\n\nggplot(data=exam_data, aes(x = SCIENCE)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"Yellow\", \n                 fill=\"Blue\") +\n  ggtitle(\"Distribution of Science scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-box-plot-of-the-english-scores-of-the-different-races",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-box-plot-of-the-english-scores-of-the-different-races",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a Box Plot of the English scores of the different races",
    "text": "Plotting a Box Plot of the English scores of the different races\n\nggplot(data=exam_data, \n       aes(y = ENGLISH, \n           x= RACE)) +\n  geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-scatter-plot-of-the-science-vs-math-scores",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-scatter-plot-of-the-science-vs-math-scores",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a Scatter Plot of the Science vs Math scores",
    "text": "Plotting a Scatter Plot of the Science vs Math scores\n\nggplot(data=exam_data, \n       aes(x= SCIENCE, y=MATHS)) +\n  geom_point() +\n  geom_smooth(size=0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-line-graph-of-the-scores-of-the-different-classes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-line-graph-of-the-scores-of-the-different-classes",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a Line graph of the scores of the different classes",
    "text": "Plotting a Line graph of the scores of the different classes"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-violin-plot-of-science-scores-in-the-different-classes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-violin-plot-of-science-scores-in-the-different-classes",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a Violin Plot of science scores in the different classes",
    "text": "Plotting a Violin Plot of science scores in the different classes\n\nggplot(data=exam_data, \n       aes(y = SCIENCE, \n           x= CLASS)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "Plotting a simple bar chart",
    "text": "Plotting a simple bar chart\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-age-sex-pyramid-using-class-as-proxy-for-age-group",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-age-sex-pyramid-using-class-as-proxy-for-age-group",
    "title": "Hands-on Exercise 1",
    "section": "Plotting Age-Sex Pyramid (Using CLASS as Proxy for Age Group)",
    "text": "Plotting Age-Sex Pyramid (Using CLASS as Proxy for Age Group)\n\npyramid_data &lt;- exam_data %&gt;% group_by(CLASS, GENDER) %&gt;% summarise(Count = n(), .groups = \"drop\") %&gt;% mutate(Count = ifelse(GENDER == \"Male\", -Count, Count))\n\nggplot(pyramid_data, aes(x = CLASS, y = Count, fill = GENDER)) + geom_bar(stat = \"identity\") + coord_flip() + labs(title = \"Class-Gender Pyramid\", x = \"Class\", y = \"Number of Students\") + theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-pareto-chart-of-race",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-pareto-chart-of-race",
    "title": "Hands-on Exercise 1",
    "section": "Plotting Pareto Chart of Race",
    "text": "Plotting Pareto Chart of Race\n\npacman::p_load(qcc)\n\nrace_freq &lt;- exam_data %&gt;%\n  count(RACE, sort = TRUE)\n\npareto.chart(race_freq$n, names = race_freq$RACE,\n             main = \"Pareto Chart of Race\")\n\n\n\n\n\n\n\n\n   \nPareto chart analysis for race_freq$n\n     Frequency  Cum.Freq. Percentage Cum.Percent.\n  A 193.000000 193.000000  59.937888    59.937888\n  B 108.000000 301.000000  33.540373    93.478261\n  C  12.000000 313.000000   3.726708    97.204969\n  D   9.000000 322.000000   2.795031   100.000000"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-trellis-display-for-english-scores",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-trellis-display-for-english-scores",
    "title": "Hands-on Exercise 1",
    "section": "Plotting Trellis Display for English Scores",
    "text": "Plotting Trellis Display for English Scores\n\nlibrary(tidyverse)\n\n# Reshape to long format\nlong_avg_data &lt;- exam_data %&gt;%\n  pivot_longer(cols = c(ENGLISH), \n               names_to = \"Subject\", \n               values_to = \"Score\") %&gt;%\n  group_by(CLASS, GENDER, Subject) %&gt;%\n  summarise(Avg_Score = mean(Score, na.rm = TRUE), .groups = \"drop\")\n\n# Set custom shapes and colors\ngender_shapes &lt;- c(\"Female\" = 16, \"Male\" = 3)  # Circle and cross\ngender_colors &lt;- c(\"Female\" = \"darkgreen\", \"Male\" = \"orangered\")\n\n# Plot\nggplot(long_avg_data, aes(x = Avg_Score, y = Subject, color = GENDER, shape = GENDER)) +\n  geom_point(size = 3) +\n  facet_wrap(~ CLASS, ncol = 1, strip.position = \"right\") +\n  scale_color_manual(values = gender_colors) +\n  scale_shape_manual(values = gender_shapes) +\n  labs(\n    title = \"Average English Scores and Gender Across Classes\",\n    x = \"Average Score\",\n    y = NULL,\n    color = \"Gender\",\n    shape = \"Gender\"\n  ) +\n  theme_minimal(base_size = 13) +\n  theme(\n    strip.text = element_text(face = \"bold\", size = 12),\n    axis.text.y = element_text(size = 11, hjust = 1),  # Justified and consistent label styling\n    panel.spacing = unit(1, \"lines\"),\n    legend.position = \"top\",\n    strip.background = element_blank(),  # Optional: remove background for facet labels\n    axis.title.y = element_blank()  # Remove y-axis title for more space\n  ) +\n  scale_y_discrete(labels = function(x) str_wrap(x, width = 10))  # Wrap y-axis labels"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, ggthemes, hrbrthemes, tidyverse)\n\n\nexam_data &lt;- read_csv(\"Exam_data.csv\")\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#overlapping-annotations",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#overlapping-annotations",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "ggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#using-ggrepel-to-repel-overlapping-text",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#using-ggrepel-to-repel-overlapping-text",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "ggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#classic-theme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#classic-theme",
    "title": "Hands-on Exercise 2",
    "section": "Classic Theme",
    "text": "Classic Theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_classic() +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#economist-theme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#economist-theme",
    "title": "Hands-on Exercise 2",
    "section": "Economist Theme",
    "text": "Economist Theme\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(base_family = \"sans\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-ggplot2-graphs",
    "title": "Hands-on Exercise 2",
    "section": "Combining ggplot2 graphs",
    "text": "Combining ggplot2 graphs\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\",\n              base_family = \"sans\")\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-2-plots-side-by-side",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-2-plots-side-by-side",
    "title": "Hands-on Exercise 2",
    "section": "Combining 2 Plots side by side",
    "text": "Combining 2 Plots side by side\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-3-graphs---using-to-stack-2-graphs-and-to-place-the-plots-beside-each-other",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-3-graphs---using-to-stack-2-graphs-and-to-place-the-plots-beside-each-other",
    "title": "Hands-on Exercise 2",
    "section": "Combining 3 graphs - Using ‚Äú/‚Äù to stack 2 graphs and ‚Äú|‚Äù to place the plots beside each other",
    "text": "Combining 3 graphs - Using ‚Äú/‚Äù to stack 2 graphs and ‚Äú|‚Äù to place the plots beside each other\n\n(p1 / p2) | p3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#placing-plots-next-to-each-other-based-on-the-provided-layout---using-inset_element",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#placing-plots-next-to-each-other-based-on-the-provided-layout---using-inset_element",
    "title": "Hands-on Exercise 2",
    "section": "Placing plots next to each other based on the provided layout - using inset_element",
    "text": "Placing plots next to each other based on the provided layout - using inset_element\ninset_element:\n\nLeft = 0.02 - left edge start 2% from left side of the main plot\nBottom = 0.7 - Bottom edge start 70% from the bottom of the main plot (Near the top)\nRight = 0.5 - Right edge ends at 50% of the width\ntop = 1 top edge ends at 100% of height\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#using-patchwork-and-theme-together",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#using-patchwork-and-theme-together",
    "title": "Hands-on Exercise 2",
    "section": "Using patchwork and theme together",
    "text": "Using patchwork and theme together\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-a-box-plot-of-the-english-scores-of-the-different-classes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-a-box-plot-of-the-english-scores-of-the-different-classes",
    "title": "Hands-on Exercise 2",
    "section": "Plotting a Box Plot of the English scores of the different classes",
    "text": "Plotting a Box Plot of the English scores of the different classes\n\nFrom the box plot below, there is a downward trend of English scores from 3A to 3I, showing that students from Class 3A generally scored better than students in the other classes\nThere are also some classes with outliers, for example class 3E and 3F where there are one or more students who scored significantly lower than the rest of the class\n\n\nggplot(data=exam_data, aes(y = ENGLISH, x= CLASS)) + geom_boxplot()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-a-violin-plot-of-science-scores-in-the-different-races",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-a-violin-plot-of-science-scores-in-the-different-races",
    "title": "Hands-on Exercise 2",
    "section": "Plotting a Violin Plot of science scores in the different Races",
    "text": "Plotting a Violin Plot of science scores in the different Races\n\nFrom the violin plot, it can be seen that there is a majority of ‚ÄúChinese‚Äù students who scored in the 75 range and ‚ÄúOther‚Äù students scoring in the 68 range for science subject\nFor Indian students, their science scores are quite evenly spread out from 12.5 to 87.5\n\n\nggplot(data=exam_data, \n       aes(y = SCIENCE, \n           x= RACE)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-a-pie-chart-of-the-proportion-of-the-different-races",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#plotting-a-pie-chart-of-the-proportion-of-the-different-races",
    "title": "Hands-on Exercise 2",
    "section": "Plotting a pie chart of the proportion of the different races",
    "text": "Plotting a pie chart of the proportion of the different races\n\nIt can be seen from the pie chart that more than half of the student population are Chinese and the next majority is Malay\nThe Indian and Other students seem to have the same proportion\n\n\nlibrary(dplyr)\nrace_counts &lt;- exam_data %&gt;%\n  count(RACE)\n\nggplot(race_counts, aes(x = \"\", y = n, fill = RACE)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  labs(title = \"Student Distribution by Race\",\n       y = NULL,\n       x = NULL,\n       fill = \"Race\") +\n  theme_void() +\n  theme(plot.title = element_text(hjust = 0.5, size = 16))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#dot-plot-of-math-scores",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#dot-plot-of-math-scores",
    "title": "Hands-on Exercise 2",
    "section": "Dot Plot of Math Scores",
    "text": "Dot Plot of Math Scores\n\nggplot(exam_data, aes(x = MATHS)) +\n  geom_dotplot(binwidth = 1, \n               fill = \"skyblue\", \n               color = \"black\") +\n  labs(title = \"Dot Plot of Maths Scores\",\n       x = \"Maths Score\",\n       y = \"Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#raincloud-plots-of-scores-by-gender",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#raincloud-plots-of-scores-by-gender",
    "title": "Hands-on Exercise 2",
    "section": "Raincloud Plots of Scores by Gender",
    "text": "Raincloud Plots of Scores by Gender\n\nlibrary(ggdist)\n\n# ensure GENDER is a factor\nexam_data$GENDER &lt;- as.factor(exam_data$GENDER)\n\na1 &lt;- ggplot(exam_data, aes(x = ENGLISH, y = GENDER, fill = GENDER)) +\n  # lighter half-density cloud\n  stat_halfeye(\n    side          = \"right\",\n    adjust        = 0.5,\n    width         = 0.6,\n    justification = 0.1,\n    .width        = 0,\n    point_colour  = NA,\n    alpha         = 0.3\n  ) +\n  # central boxplot\n  geom_boxplot(\n    width         = 0.12,\n    outlier.shape = NA,\n    position      = position_nudge(y = 0.2),\n    alpha         = 0.8\n  ) +\n  # jittered points on top\n  geom_jitter(\n    width  = 0,\n    height = 0.15,\n    size   = 1.5,\n    alpha  = 0.6,\n    aes(color = GENDER)\n  ) +\n  # matching palette\n  scale_fill_manual(values = c(\"Female\" = \"#00AFBB\", \"Male\" = \"#FC4E07\")) +\n  scale_color_manual(values = c(\"Female\" = \"#00AFBB\", \"Male\" = \"#FC4E07\")) +\n  # side-by-side panels\n  facet_wrap(~ GENDER, nrow = 1, scales = \"free_y\") +\n  theme_ipsum_rc(base_size = 12) +\n  labs(\n    title = \"Raincloud Plot of English Scores by Gender\",\n    x     = \"English Score\",\n    y     = NULL\n  ) +\n  theme(\n    legend.position    = \"none\",\n    axis.text.y        = element_blank(),\n    axis.ticks.y       = element_blank(),\n    panel.grid.major.y = element_blank()\n  )\n\n\n# ensure GENDER is a factor\nexam_data$GENDER &lt;- as.factor(exam_data$GENDER)\n\na2 &lt;- ggplot(exam_data, aes(x = MATHS, y = GENDER, fill = GENDER)) +\n  # lighter half-density cloud\n  stat_halfeye(\n    side          = \"right\",\n    adjust        = 0.5,\n    width         = 0.6,\n    justification = 0.1,\n    .width        = 0,\n    point_colour  = NA,\n    alpha         = 0.3\n  ) +\n  # central boxplot\n  geom_boxplot(\n    width         = 0.12,\n    outlier.shape = NA,\n    position      = position_nudge(y = 0.2),\n    alpha         = 0.8\n  ) +\n  # jittered points on top\n  geom_jitter(\n    width  = 0,\n    height = 0.15,\n    size   = 1.5,\n    alpha  = 0.6,\n    aes(color = GENDER)\n  ) +\n  # matching palette\n  scale_fill_manual(values = c(\"Female\" = \"#00AFBB\", \"Male\" = \"#FC4E07\")) +\n  scale_color_manual(values = c(\"Female\" = \"#00AFBB\", \"Male\" = \"#FC4E07\")) +\n  # side-by-side panels\n  facet_wrap(~ GENDER, nrow = 1, scales = \"free_y\") +\n  theme_ipsum_rc(base_size = 12) +\n  labs(\n    title = \"Raincloud Plot of Maths Scores by Gender\",\n    x     = \"English Score\",\n    y     = NULL\n  ) +\n  theme(\n    legend.position    = \"none\",\n    axis.text.y        = element_blank(),\n    axis.ticks.y       = element_blank(),\n    panel.grid.major.y = element_blank()\n  )\n\n\n# ensure GENDER is a factor\nexam_data$GENDER &lt;- as.factor(exam_data$GENDER)\n\na3 &lt;- ggplot(exam_data, aes(x = SCIENCE, y = GENDER, fill = GENDER)) +\n  # lighter half-density cloud\n  stat_halfeye(\n    side          = \"right\",\n    adjust        = 0.5,\n    width         = 0.6,\n    justification = 0.1,\n    .width        = 0,\n    point_colour  = NA,\n    alpha         = 0.3\n  ) +\n  # central boxplot\n  geom_boxplot(\n    width         = 0.12,\n    outlier.shape = NA,\n    position      = position_nudge(y = 0.2),\n    alpha         = 0.8\n  ) +\n  # jittered points on top\n  geom_jitter(\n    width  = 0,\n    height = 0.15,\n    size   = 1.5,\n    alpha  = 0.6,\n    aes(color = GENDER)\n  ) +\n  # matching palette\n  scale_fill_manual(values = c(\"Female\" = \"#00AFBB\", \"Male\" = \"#FC4E07\")) +\n  scale_color_manual(values = c(\"Female\" = \"#00AFBB\", \"Male\" = \"#FC4E07\")) +\n  # side-by-side panels\n  facet_wrap(~ GENDER, nrow = 1, scales = \"free_y\") +\n  theme_ipsum_rc(base_size = 12) +\n  labs(\n    title = \"Raincloud Plot of Science Scores by Gender\",\n    x     = \"English Score\",\n    y     = NULL\n  ) +\n  theme(\n    legend.position    = \"none\",\n    axis.text.y        = element_blank(),\n    axis.ticks.y       = element_blank(),\n    panel.grid.major.y = element_blank()\n  )\n\nUsing ‚Äú/‚Äù to combine the charts, we can get the figures below."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#diverging-stacked-bar-chart-split-by-gender",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#diverging-stacked-bar-chart-split-by-gender",
    "title": "Hands-on Exercise 2",
    "section": "Diverging Stacked Bar Chart split by Gender",
    "text": "Diverging Stacked Bar Chart split by Gender\nThe subjects are split into 3 bands for each subject: Low(0-39), Medium(40-69), High(70-100).\nFrom the charts, there are more females in the High band for English and Science Subjects while the Math subjects are more or less equal for both females and males.\nIn the medium band for English, there are more males then females while for Math and Science, there are more females than males.\nIn the low band, however, there are consistently more males than females.\nTo conclude, females generally score higher for English and Science subjects and score higher than males in general.\n\n# Load libraries\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(forcats)\n\n# 1. Categorize each subject into performance bands\nexam_bands &lt;- exam_data %&gt;%\n  mutate(\n    ENGLISH_BAND = cut(ENGLISH, breaks = c(-Inf, 39, 69, 100),\n                       labels = c(\"Low\", \"Medium\", \"High\")),\n    MATHS_BAND   = cut(MATHS,   breaks = c(-Inf, 39, 69, 100),\n                       labels = c(\"Low\", \"Medium\", \"High\")),\n    SCIENCE_BAND = cut(SCIENCE, breaks = c(-Inf, 39, 69, 100),\n                       labels = c(\"Low\", \"Medium\", \"High\"))\n  )\n\n# 2. Reshape data to long format for faceting\nlong_bands &lt;- exam_bands %&gt;%\n  select(GENDER, ENGLISH_BAND, MATHS_BAND, SCIENCE_BAND) %&gt;%\n  pivot_longer(cols = ends_with(\"_BAND\"),\n               names_to = \"SUBJECT\",\n               values_to = \"PERFORMANCE\") %&gt;%\n  mutate(\n    SUBJECT = recode(SUBJECT,\n                     ENGLISH_BAND = \"English\",\n                     MATHS_BAND = \"Maths\",\n                     SCIENCE_BAND = \"Science\"),\n    PERFORMANCE = factor(PERFORMANCE, levels = c(\"Low\", \"Medium\", \"High\"))\n  )\n\n# 3. Prepare data for plotting\nplot_data &lt;- long_bands %&gt;%\n  count(SUBJECT, GENDER, PERFORMANCE) %&gt;%\n  mutate(n = ifelse(GENDER == \"Male\", -n, n))\n\n# 4. Create diverging stacked bar chart with facets\nggplot(plot_data, aes(x = PERFORMANCE, y = n, fill = GENDER)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  coord_flip() +\n  facet_wrap(~ SUBJECT, ncol = 1, scales = \"free_y\") +\n  scale_y_continuous(labels = abs) +\n  scale_fill_manual(values = c(\"Female\" = \"#00AFBB\", \"Male\" = \"#FC4E07\")) +\n  labs(\n    title = \"Diverging Stacked Bar Charts: Performance Bands by Gender\",\n    x = \"Performance Band\",\n    y = \"Number of Students\"\n  ) +\n  theme_minimal(base_size = 14)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands on Exercise 3 Part 1",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "title": "Hands on Exercise 3 Part 1",
    "section": "3.6.1 Displaying Statistics on tooltip",
    "text": "3.6.1 Displaying Statistics on tooltip\n\nComputing 90% Confidence Interval of the mean\nDerived statistics are displayed in the tooltip\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "title": "Hands on Exercise 3 Part 1",
    "section": "3.6.2 Hover effect with data_id aesthetic",
    "text": "3.6.2 Hover effect with data_id aesthetic\n\nInteractive feature of ggiraph, data_id\nAnything associated with data_id = CLASS will be highlighted if you hover over it\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "title": "Hands on Exercise 3 Part 1",
    "section": "3.6.3 Styling Hover Effect",
    "text": "3.6.3 Styling Hover Effect\n\nCss codes are used to change the highlighting effect\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "title": "Hands on Exercise 3 Part 1",
    "section": "3.6.4 Combining tooltip and hover effect",
    "text": "3.6.4 Combining tooltip and hover effect\n\nElements associated with data_id = CLASS will be highlighted upon mouse over\nTooltip will also show the CLASS\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "title": "Hands on Exercise 3 Part 1",
    "section": "3.6.5 Click effect with onclick",
    "text": "3.6.5 Click effect with onclick\n\nonclick provides hotlink interactivity on the web\nWeb document link with a data object will be displayed on the web browser upon mouse click\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands on Exercise 3 Part 1",
    "section": "3.6.6 Coordinated Multiple Views with ggiraph",
    "text": "3.6.6 Coordinated Multiple Views with ggiraph\n\nWhen a data point on one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too\nThe following strategies will be used:\nAppropriate interactive functions of ggiraph to create the multiple views\npatchwork function of patchwork package will be used inside girafe function to create interactive coordinated multiple views\n\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hands on Exercise 3 Part 1",
    "section": "3.7.1 Creating an interactive scatter plot: plot_ly() method",
    "text": "3.7.1 Creating an interactive scatter plot: plot_ly() method\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method-.tabset",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method-.tabset",
    "title": "Hands-on_Ex03",
    "section": "3.7.1 Creating an interactive scatter plot: plot_ly() method {.tabset",
    "text": "3.7.1 Creating an interactive scatter plot: plot_ly() method {.tabset\n\nlibrary(plotly)\n\nplot_ly(data = exam_data, \n        x = ~MATHS, \n        y = ~ENGLISH,\n        type = 'scatter',\n        mode = 'markers')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "title": "Hands on Exercise 3 Part 1",
    "section": "3.7.2 Working with visual variable: plot_ly() method",
    "text": "3.7.2 Working with visual variable: plot_ly() method\n\ncolor argument is mapped to a qualitative visual variable (i.e.¬†RACE)\n\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "Hands on Exercise 3 Part 1",
    "section": "3.7.3 Creating an interactive scatter plot: ggplotly() method",
    "text": "3.7.3 Creating an interactive scatter plot: ggplotly() method\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "title": "Hands on Exercise 3 Part 1",
    "section": "3.7.4 Coordinated Multiple Views with plotly",
    "text": "3.7.4 Coordinated Multiple Views with plotly\n\nhighlight_key() of plotly package is used as shared data\ntwo scatterplots will be created by using ggplot2 functions\nsubplot() of plotly package is used to place them next to each other side-by-side\n\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "title": "Hands on Exercise 3 Part 1",
    "section": "3.8.1 Interactive Data Table: DT Package",
    "text": "3.8.1 Interactive Data Table: DT Package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‚ÄòDataTables‚Äô (typically via R Markdown or Shiny)\n\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "title": "Hands on Exercise 3 Part 1",
    "section": "3.8.2 Linked brushing: crosstalk method",
    "text": "3.8.2 Linked brushing: crosstalk method\nLearning points:\n\nhighlight() is a function of plotly package. It sets a variety of options for highlighting multiple plot. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document.\n\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html",
    "title": "Hands-on Exercise 3 Part 2",
    "section": "",
    "text": "Creating animated data visualisation by using gganimate and plotly r packages\nLearn how to reshape data by using tidyr package\nProcess, wrangle and transform data by using dplyr package\n\n\n\n\nPlots do not move\nMany individual plots are built and stitched together as movie frames\nEach frame is a different plot and subset drives the flow of the animation when stitched back together\n\n\n\n\n\nFrame: Represents a different point in time or a different category\nAnimation Attributes: Settings that control how the animation behaves"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#basic-concepts-of-animation",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#basic-concepts-of-animation",
    "title": "Hands-on Exercise 3 Part 2",
    "section": "",
    "text": "Plots do not move\nMany individual plots are built and stitched together as movie frames\nEach frame is a different plot and subset drives the flow of the animation when stitched back together"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#terminology",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#terminology",
    "title": "Hands-on Exercise 3 Part 2",
    "section": "",
    "text": "Frame: Represents a different point in time or a different category\nAnimation Attributes: Settings that control how the animation behaves"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#loading-the-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#loading-the-r-packages",
    "title": "Hands-on Exercise 3 Part 2",
    "section": "4.2.1 Loading the R packages",
    "text": "4.2.1 Loading the R packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#importing-the-data",
    "title": "Hands-on Exercise 3 Part 2",
    "section": "4.2.2 Importing the data",
    "text": "4.2.2 Importing the data\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#building-a-static-population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#building-a-static-population-bubble-plot",
    "title": "Hands-on Exercise 3 Part 2",
    "section": "4.3.1 Building a static population bubble plot",
    "text": "4.3.1 Building a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#building-the-animated-bubble-plot",
    "title": "Hands-on Exercise 3 Part 2",
    "section": "4.3.2 Building the animated bubble plot",
    "text": "4.3.2 Building the animated bubble plot\n\nTransition_time() of gganimate is used to create transition through distinct states in time (i.e.¬†Year)\nease_aes() is used to control easing of aesthetics: Default is linear. Other methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back and bounce\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands-on Exercise 3 Part 2",
    "section": "4.4.1 Building an animated bubble plot: ggplotly() method",
    "text": "4.4.1 Building an animated bubble plot: ggplotly() method\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\nEven though show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position=‚Äònone‚Äô) should be used.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_Part2.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-on Exercise 3 Part 2",
    "section": "4.4.2 Building an animated bubble plot: plot_ly() method",
    "text": "4.4.2 Building an animated bubble plot: plot_ly() method\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "",
    "text": "A local online media company that publishes daily content on digital platforms is planning to release an article on demographic structures and distribution of Singapore in 2024.\n\n\n\nAssuming the role of the graphical editor of the media company, you are tasked to prepare at most three data visualisation for the article.\nTo accomplish the task, the data: Singapore Residents by Planning Area/Subzone, Single Year of Age and Sex, June 2024 dataset shared by Department of Statistics, Singapore(DOS) is used.\n\n\n\nBased on these information, the following questions will be answered:\n\nWhat is the proportion of males and females in Singapore and is gender-balance consistent across Singapore?\nWhat is the age distribution of Singapore‚Äôs population in 2024 and is there a decrease in birth rates over the years?\nIs the current number of working adults enough to support the number of dependencies in Singapore?"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#setting-the-scene",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#setting-the-scene",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "",
    "text": "A local online media company that publishes daily content on digital platforms is planning to release an article on demographic structures and distribution of Singapore in 2024."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#the-task",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#the-task",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "",
    "text": "Assuming the role of the graphical editor of the media company, you are tasked to prepare at most three data visualisation for the article.\nTo accomplish the task, the data: Singapore Residents by Planning Area/Subzone, Single Year of Age and Sex, June 2024 dataset shared by Department of Statistics, Singapore(DOS) is used."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#breaking-down-the-question",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#breaking-down-the-question",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "",
    "text": "Based on these information, the following questions will be answered:\n\nWhat is the proportion of males and females in Singapore and is gender-balance consistent across Singapore?\nWhat is the age distribution of Singapore‚Äôs population in 2024 and is there a decrease in birth rates over the years?\nIs the current number of working adults enough to support the number of dependencies in Singapore?"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#load-packages",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#load-packages",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "2.1 Load packages",
    "text": "2.1 Load packages\nThe following packages are loaded using the pacman::p_load function:\n\ntidyverse: Core collection of R packages designed for data science\nggrepel: An R package to provide geoms for gg plot2 to repel overlapping text labels\nggthemes: An R package to provided extra themes, geoms and scales for ggplot 2\nhrbrthemes: an R packagae that provides typography-centric themes and theme componenets for ggplot2\npatchwork: to prepare composite figure created using ggplot2\ndplyr: An R package that provides a grammar of data manipulation, offering a set of functions for filtering, selecting, mutating, summarising and arranging data frames\n\n\npacman::p_load(tidyverse, ggrepel, \n               ggthemes,  hrbrthemes,\n               patchwork, dplyr)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#import-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#import-data",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "2.2 Import Data",
    "text": "2.2 Import Data\nThe data that has been used has been mentioned in Chapter 1.2 above. This dataset will be imported as resident_data.\n\nresident_data &lt;- read_csv(\"respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-pre-processing",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-pre-processing",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "2.3 Data pre-processing",
    "text": "2.3 Data pre-processing\n\n2.3.1 Check for duplicate entries\nWe first take a look at the data and check if there are any duplicate entries using any(duplicated()).\n\nany(duplicated(resident_data))\n\n[1] FALSE\n\n\nSince ‚ÄúFALSE‚Äù is return, there are no duplicated entries\n\n\n2.3.2 Check for missing values\nThe colSums function is being used to check for missing values.\n\ncolSums(is.na(resident_data))\n\n  PA   SZ  Age  Sex  Pop Time \n   0    0    0    0    0    0 \n\n\nSince there are no missing values in any of the row, we will proceed with the next step.\n\n\n2.3.3 Filtering for relevant variables & renaming them\nThere are 60424 rows x 6 columns in the data, where the columns are labelled as:\n\nPA - Planning Area\nSZ - Subzone\nAge - From ‚Äú0‚Äù to ‚Äú89‚Äù, and those above 90 are labelled as ‚Äú90_and_Over‚Äù\nSex - Males or Females\nPop - Resident Count (Has been rounded to the nearest 10)\nTime - Year (We will only be looking at 2024 data)\n\nCreate a new object called resident_data_clean where we will rename PA, SZ and Pop for easy reading by using the rename() function.\nRename those labelled as ‚Äú90_and_Over‚Äù in the Age Column as ‚Äú90‚Äù using the ifelse() function for easier data plots.\nEnsuring population and age is categorised as numerical data by using the as.numeric function.\nFor the Age column, it is slightly special as I used levels = as.character function as R sorts alphabetically by default and ‚Äú10‚Äù will come before ‚Äú2‚Äù. By using this function, i am forcing R to treat the ages in true numeric order when i plot or tabulate them.\n\nresident_data_clean &lt;- resident_data %&gt;%\n  rename(\n    Planning_Area = PA,\n    Subzone = SZ,\n    Population = Pop\n  ) %&gt;%\n  # Convert Age to \"90+\" if it's \"90_and_Over\"\n  mutate(\n    Age = ifelse(Age == \"90_and_Over\", \"90\", Age),\n    Population = as.numeric(Population),\n    Age = factor(Age, levels = as.character(0:90)),\n    Age_numeric = as.numeric(as.character(Age))  \n  )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-wrangling",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "2.3 Data Wrangling",
    "text": "2.3 Data Wrangling\n\n2.3.1 Check for duplicate entries\nThe data is being checked for any duplicate entries using any(duplicated()).\n\nany(duplicated(resident_data))\n\n[1] FALSE\n\n\nSince ‚ÄúFALSE‚Äù is returned, there are no duplicated entries\n\n\n2.3.2 Check for missing values\nThe colSums function is being used to check for missing values.\n\ncolSums(is.na(resident_data))\n\n  PA   SZ  Age  Sex  Pop Time \n   0    0    0    0    0    0 \n\n\nThere are no missing values in any of the rows.\n\n\n2.3.3 Filtering for relevant variables & renaming them\nThere are 60424 rows x 6 columns in the data, where the columns are labelled as:\n\nPA - Planning Area\nSZ - Subzone\nAge - From ‚Äú0‚Äù to ‚Äú89‚Äù, and those above 90 are labelled as ‚Äú90_and_Over‚Äù\nSex - Males or Females\nPop - Resident Count (Has been rounded to the nearest 10)\nTime - Year (We will only be looking at 2024 data)\n\nA new object called resident_data_clean is created where it will rename PA, SZ and Pop for easy reading by using the rename() function.\nThose labelled as ‚Äú90_and_Over‚Äù in the Age Column will be renamed as ‚Äú90‚Äù using the ifelse() function for easier data plots.\nPopulation and age will then be categorised as numerical data by using the as.numeric function.\nFor the Age column, it is slightly special as levels = as.character function in R sorts alphabetically by default and ‚Äú10‚Äù will come before ‚Äú2‚Äù. By using this function, R will be forced to treat the ages in true numeric order when plotting or tabulating them. A new column, Age_numeric, was also created in the new object.\n\nresident_data_clean &lt;- resident_data %&gt;%\n  rename(\n    Planning_Area = PA,\n    Subzone = SZ,\n    Population = Pop\n  ) %&gt;%\n  # Convert Age to \"90+\" if it's \"90_and_Over\"\n  mutate(\n    Age = ifelse(Age == \"90_and_Over\", \"90\", Age),\n    Population = as.numeric(Population),\n    Age = factor(Age, levels = as.character(0:90)),\n    Age_numeric = as.numeric(as.character(Age))  \n  )\n\n\n\n2.3.4 Preview processed data\n\nhead(resident_data_clean)\n\n# A tibble: 6 √ó 7\n  Planning_Area Subzone                Age   Sex    Population  Time Age_numeric\n  &lt;chr&gt;         &lt;chr&gt;                  &lt;fct&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;\n1 Ang Mo Kio    Ang Mo Kio Town Centre 0     Males          10  2024           0\n2 Ang Mo Kio    Ang Mo Kio Town Centre 0     Femal‚Ä¶         10  2024           0\n3 Ang Mo Kio    Ang Mo Kio Town Centre 1     Males          10  2024           1\n4 Ang Mo Kio    Ang Mo Kio Town Centre 1     Femal‚Ä¶         10  2024           1\n5 Ang Mo Kio    Ang Mo Kio Town Centre 2     Males          10  2024           2\n6 Ang Mo Kio    Ang Mo Kio Town Centre 2     Femal‚Ä¶         10  2024           2\n\n\n\n\n2.3.5 Grouping them into Regions for Easy Visualisation\nAs there are too many planning areas, to make things easier to visualise, the planning areas have been further categorised into 5 areas: North, North-East, East, West and Central. This was done by using the categories on the Urban Redevelopment Authority(URA) website:\n\nNorth: Central Water Catchment, Lim Chu Kang, Mandai, Sembawang, Simpang, Sungei Kadut, Woodlands, Yishun\nNorth-East: Ang Mo Kio, Hougang, Punggol, Sengkang, Serangoon, Seletar\nEast: Bedok, Changi, Changi Bay, Pasir Ris, Paya Lebar, Tampines\nWest: Boon Lay, Bukit Batok, Bukit Panjang, Choa Chu Kang, Clementi, Jurong East, Jurong West, Pioneer, Tengah, Tuas, Western Water Cachement\nCentral: Bishan, Bukit Merah, Bukit Timah, Central Area, Downtown Core, Marina East, Marina South, Museum, Newton, Novena, Orchard, Outram, River Valley, Rochor, Singapore River, Straits View, Tanglin\nAreas like North-Eastern Islands and Western islands were intentionally left out as they do not belong to any of the areas\n\nSteps:\nStep 1: A new list called region_map was created to categorise them into the 5 categories\n\n# 1. Step 1\nregion_map &lt;- list(\n  North = c(\n    \"Central Water Catchment\", \"Lim Chu Kang\", \"Mandai\",\n    \"Sembawang\", \"Simpang\", \"Sungei Kadut\", \"Woodlands\", \"Yishun\"\n  ),\n  `North-East` = c(\n    \"Ang Mo Kio\", \"Hougang\", \"Punggol\", \"Sengkang\", \n    \"Serangoon\", \"Seletar\"\n  ),\n  East = c(\n    \"Bedok\", \"Changi\", \"Changi Bay\", \n    \"Pasir Ris\", \"Paya Lebar\", \"Tampines\"\n  ),\n  West = c(\n    \"Boon Lay\", \"Bukit Batok\", \"Bukit Panjang\", \"Choa Chu Kang\",\n    \"Clementi\", \"Jurong East\", \"Jurong West\", \"Pioneer\", \n    \"Tengah\", \"Tuas\", \"Western Water Catchment\"\n  ),\n  Central = c(\n    \"Bishan\", \"Bukit Merah\", \"Bukit Timah\", \"Central Area\",\n    \"Downtown Core\", \"Marina East\", \"Marina South\", \"Museum\",\n    \"Newton\", \"Novena\", \"Orchard\", \"Outram\", \"River Valley\",\n    \"Rochor\", \"Singapore River\", \"Straits View\", \"Tanglin\"\n  )\n)\n\nStep 2: A new data object resident_regioned was then created with their region matched to them and those who were not found are removed using filter() function.\n\n# Step 2\nresident_regioned &lt;- resident_data_clean %&gt;%\n  mutate(\n    Region = case_when(\n      Planning_Area %in% region_map$North        ~ \"North\",\n      Planning_Area %in% region_map$`North-East` ~ \"North-East\",\n      Planning_Area %in% region_map$East         ~ \"East\",\n      Planning_Area %in% region_map$West         ~ \"West\",\n      Planning_Area %in% region_map$Central      ~ \"Central\",\n      TRUE                                       ~ NA_character_\n    )\n  ) %&gt;%\n  filter(!is.na(Region))\n\nThe data will then be grouped into their respective regions for the analysis.\nNow that data wrangling is complete, 3 key visualizations will be performed on this data set."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#age-sex-pyramid",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#age-sex-pyramid",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "3.2 Age-Sex Pyramid",
    "text": "3.2 Age-Sex Pyramid\n\n# Step 4: Prepare pyramid data for static chart\npyramid_data &lt;- resident_regioned %&gt;%\n  group_by(Region, Age_bin, Sex) %&gt;%\n  summarise(Total = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(\n    Value = ifelse(Sex == \"Males\", -Total, Total),\n    Label = format(Total, big.mark = \",\"),\n    hjust = ifelse(Sex == \"Males\", 1.1, -0.1)  # push left or right based on sex\n  )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#pie-chart-to-visualise-total-population-by-gender",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#pie-chart-to-visualise-total-population-by-gender",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "3.2 Pie Chart to Visualise Total Population by Gender",
    "text": "3.2 Pie Chart to Visualise Total Population by Gender\n\n# Summarise population by Region and Sex\npie_all_regions &lt;- resident_regioned %&gt;%\n  group_by(Region, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\")\n\n\n# Define the correct stacking order for pie slices\nordered_levels &lt;- rev(c(\n  \"Central.Males\", \"Central.Females\",\n  \"East.Males\", \"East.Females\",\n  \"North.Males\", \"North.Females\",\n  \"North-East.Males\", \"North-East.Females\",\n  \"West.Males\", \"West.Females\"\n))\n\n# Prepare the data\npie_all_regions &lt;- pie_all_regions %&gt;%\n  mutate(\n    RegionSex = factor(paste(Region, Sex, sep = \".\"), levels = ordered_levels),\n    label = paste0(round(Population / sum(Population) * 100, 1), \"%\")\n  )\n\n# Plot: simple, clean pie with percentages inside\nggplot(pie_all_regions, aes(x = \"\", y = Population, fill = RegionSex)) +\n  geom_col(width = 1, color = \"white\") +\n  geom_text(\n    aes(label = label),\n    position = position_stack(vjust = 0.5),\n    size = 3,\n    color = \"black\"\n  ) +\n  coord_polar(theta = \"y\") +\n  theme_void() +\n  labs(\n    title = \"Population Composition by Region and Gender (2024)\",\n    fill = \"Region & Sex\"\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Central.Males\"     = \"#f4cccc\",\n      \"Central.Females\"   = \"#a94442\",\n      \"East.Males\"        = \"#d9ead3\",\n      \"East.Females\"      = \"#6aa84f\",\n      \"North.Males\"       = \"#fce5cd\",\n      \"North.Females\"     = \"#e69138\",\n      \"North-East.Males\"  = \"#d9d2e9\",\n      \"North-East.Females\"= \"#8e7cc3\",\n      \"West.Males\"        = \"#cfe2f3\",\n      \"West.Females\"      = \"#3c78d8\"\n    ),\n    breaks = rev(ordered_levels)\n  )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#pie-chart-by-regions",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#pie-chart-by-regions",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "3.1 Pie Chart By Regions",
    "text": "3.1 Pie Chart By Regions\nFirst, groups were being created using groupby() to group them by regions and sex (Eg. East Males and East Females) so that the total population of each group can be found using sum(). After that, .groups = ‚Äúdrop‚Äù will remove the groups as ggplot doesn‚Äôt use groupings to plot and some functions that ‚Äúmutate‚Äù may not turn out as expected.\nNext, ordered_levels was created to define the stacking order for the pie slices in an anti-clockwise direction.\nmutate() was used to add new columns to the pie_all_regions object.\nggplot() initializes a ggplot and the factors y = Population defines the height of each bar to be turned into pie slices and fill = RegionSex means the colour fill will be based on Sex.\ngeom_col draws bars with heights corresponding to population with width of 1 and white borders between pie slices.\ngeom_text was used to add percentage labels inside each pie slice with size of 3 and text colour black.\ncoord_polar(theta = ‚Äúy‚Äù) converts stacked bar into a circular pie chart where the y-axis becomes the angle.\nlabs() help to add chart title and legend title.\nscale_fill_manual was used to set custom colours for each Region-Sex.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Summarise population by Region and Sex\npie_all_regions &lt;- resident_regioned %&gt;%\n  group_by(Region, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\")\n\n\n# Define the correct stacking order for pie slices\nordered_levels &lt;- c(\n  \"Central.Males\", \"Central.Females\",\n  \"East.Males\", \"East.Females\",\n  \"North.Males\", \"North.Females\",\n  \"North-East.Males\", \"North-East.Females\",\n  \"West.Males\", \"West.Females\"\n)\n\n# Prepare the data\npie_all_regions &lt;- pie_all_regions %&gt;%\n  mutate(\n    RegionSex = factor(paste(Region, Sex, sep = \".\"), levels = ordered_levels),\n    label = paste0(round(Population / sum(Population) * 100, 1), \"%\")\n  )\n\n# Plot: simple, clean pie with percentages inside\nggplot(pie_all_regions, aes(x = \"\", y = Population, fill = RegionSex)) +\n  geom_col(width = 1, color = \"white\") +\n  geom_text(\n    aes(label = label),\n    position = position_stack(vjust = 0.5),\n    size = 3,\n    color = \"black\"\n  ) +\n  coord_polar(theta = \"y\") +\n  theme_void() +\n  labs(\n    title = \"Population Composition by Region and Gender (2024)\",\n    fill = \"Region & Sex\"\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Central.Males\"     = \"#f4cccc\",\n      \"Central.Females\"   = \"#a94442\",\n      \"East.Males\"        = \"#d9ead3\",\n      \"East.Females\"      = \"#6aa84f\",\n      \"North.Males\"       = \"#fce5cd\",\n      \"North.Females\"     = \"#e69138\",\n      \"North-East.Males\"  = \"#d9d2e9\",\n      \"North-East.Females\"= \"#8e7cc3\",\n      \"West.Males\"        = \"#cfe2f3\",\n      \"West.Females\"      = \"#3c78d8\"\n    ),\n    breaks = rev(ordered_levels)\n  )\n\n\n\n\nObservation: From the pie chart, it can be seen that the proportion of males and females in each area is quite similar, only differing by 1-2%. However, it can be seen from the pie chart that the proportion of males are consistently lesser that the proportion of females in each area. We can then conclude that there are slightly less males than females in Singapore. Overall, gender balance is consistent across Singapore.\nAdditionally, the West and North-East Areas each made up 25% of the total population, accounting for half the population in Singapore while the North, Central and and East made up of the other half of Singapore‚Äôs population."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#age-sex-pyramid-by-regions",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#age-sex-pyramid-by-regions",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "3.2 Age-Sex Pyramid by Regions",
    "text": "3.2 Age-Sex Pyramid by Regions\nFor the age-sex pyramid, the data was then mutated using cut() and breaks() function to split them into Age categories: ‚Äú0-9‚Äù, ‚Äú10-19‚Äù and so on. In the cut() function, ‚Äúright = FALSE‚Äù was used to exclude the upper bound of the bins so that they will consider 0-9 instead of 0-10 for each bin. A new column Age_bin was created.\n\nresident_regioned &lt;- resident_regioned %&gt;%\n  mutate(\n    Age_bin = cut(\n      Age_numeric,\n      breaks = c(seq(0, 90, by = 10), Inf),\n      labels = c(paste0(seq(0,80,by=10), \"-\", seq(9,89,by=10)), \"90 and Above\"),\n      right = FALSE\n    )\n  )\n\nA new data object pyramid_data was created to create the pyramid table. groupby() and summarise(Total = sum()) functions were used to group them by region(East, West etc), age group(Eg. 0-9, 10-19 etc) and sex(Males or females), before summing them up.\nValue = ifelse(Sex == ‚ÄúMales, -Total, Total‚Äù) was then used to flip males to negative values so they will be plotted to the left, while the female values remain as positive.\nLabel = format(Total, big.mark = ‚Äú,‚Äù) is used to convert the numbers from 52300 to 52,300. These labels will be shown beside the bar graph.\nhjust = ifelse(Sex == ‚ÄúMales‚Äù, 1.1, -0.1) aligns the male label to the left of the graph and aligns the female label to the right of the graph.\n\npyramid_data &lt;- resident_regioned %&gt;%\n  group_by(Region, Age_bin, Sex) %&gt;%\n  summarise(Total = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(\n    Value = ifelse(Sex == \"Males\", -Total, Total),\n    Label = format(Total, big.mark = \",\"),\n    hjust = ifelse(Sex == \"Males\", 1.1, -0.1)  # push left or right based on sex\n  )\n\nIn this section, individual plots for each region will be created and put together with patchwork.\nA reusable function called plot_region_pyramid will be created so that it can be called by its region name.\nggplot is then used next to plot the graph. aes( x = Value, y = Age_bin, fill = Sex) uses x-axis as Values so that Males are negative and Females are positive, y-axis is using the Age_bin which was created previously ranging from ‚Äú0-9‚Äù, ‚Äú10-19‚Äù etc and fill is coloured by the different Sex.\ngeom_col(width = 0.8) makes the width slightly smaller than 1 so that they do not touch.\ngeom_text(aes(label = Label, hjust = hjust), size = 2.8, color = ‚Äúblack‚Äù) is an aesthetic label that uses the pre-formatted functions in the code chunk before this.\nscale_x_continuous() helps to adjust the labels of the axis to follow pre-defined values mentioned in the code.\ncoord_cartesian() adjusts the actual values of the axis.\nscale_fill_manual sets the fill colour for males and females.\nlabs() add a title for each pane with the region name.\ntheme_minimal() uses the minimal theme.\n(p1 / p2 / p3 / p4 / p5) + plot_layout(guides = ‚Äúcollect‚Äù) helps to put the graphs together and show only 1 legend.\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nplot_region_pyramid &lt;- function(region_name) {\n  ggplot(\n    data = filter(pyramid_data, Region == region_name),\n    aes(x = Value, y = Age_bin, fill = Sex)\n  ) +\n    geom_col(width = 0.8) +\n    geom_text(aes(label = Label, hjust = hjust), size = 2.8, color = \"black\") +\n    scale_x_continuous(\n      breaks = c(-75000, -50000, -25000, 0, 25000, 50000, 75000),\n      labels = function(x) paste0(abs(x) / 1000, \"K\")\n    ) +\n    coord_cartesian(xlim = c(-85000, 85000)) +\n    scale_fill_manual(values = c(Males = \"#4472C4\", Females = \"#ED7D31\")) +\n    labs(\n      title = paste(\"Region:\", region_name),\n      x = \"Population\",\n      y = \"Age Group\"\n    ) +\n    theme_minimal(base_size = 9) +\n    theme(\n      legend.position = \"none\",\n      strip.text = element_text(face = \"bold\"),\n      axis.title.y = element_blank(),\n      panel.grid.minor.x = element_blank(),\n      panel.grid.major.x = element_line(color = \"grey80\")\n    )\n}\n\n# Generate plots for each region\np1 &lt;- plot_region_pyramid(\"Central\")\np2 &lt;- plot_region_pyramid(\"East\")\np3 &lt;- plot_region_pyramid(\"North\")\np4 &lt;- plot_region_pyramid(\"North-East\")\np5 &lt;- plot_region_pyramid(\"West\")\n\n# Arrange using patchwork (2 columns)\n(p1 / p2 / p3 / p4 / p5) + plot_layout(guides = \"collect\")\n\n\n\n\nObservation: From the graphs, it can be seen that the population of Ages 30 to 69 are consistently larger than the population in the Age Range 0 to 29 and Ages 70 and above in most areas, resulting in a bulge in the middle of all the graphs in the five areas. This also shows that birth rates has decreased in the recent years.\nAdditionally, the population in the Age range of 0 to 29 has consistently more males than females in all areas except in the Central Area. However, those in the Age range 30 and above has more females than males in all areas with those aged 60 to 69 in the North area being the exception."
  },
  {
    "objectID": "In-Class _Ex/In-Class_Ex03/In-Class_Ex03.html",
    "href": "In-Class _Ex/In-Class_Ex03/In-Class_Ex03.html",
    "title": "In-Class Exercise 03",
    "section": "",
    "text": "Tableau Exercise - Using superstore 2020 data from lesson 2\nCreating a sales vs profit graph\n\nDrag Profit to rows and Sales to Columns\nDrag State to detail under Marks\nDrag Sales to Size to adjust the size of the bubble\nDrag Profit to Color to adjust the colour of the bubbles\nDrag Order Date to filters to filter based on the year of the profit - Click on the dropdown\n\nCreating\n\nDrag sales to Rows and Order date to column\nTo create a dual axis graph, drag Profit to the graph until you see the dotted horizontal line and drop it"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#bar-graph-of-retirees-to-working-adults",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#bar-graph-of-retirees-to-working-adults",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "3.3 Bar Graph of Retirees to Working Adults",
    "text": "3.3 Bar Graph of Retirees to Working Adults\nAs the current retirement age is at 68 years old and Singaporeans usually start work around 23 to 25 years old at graduation, we will use the population of those above 68 years old over the population of those Aged 24 to 67 to find the Dependency Ratio(ratio of Retirees to working adults).\nadjusted_ageing_ratio_by_region is the new object created to add new custom age groups.\nmutate() is used to change the item to numeric so that i am able to use &lt;= and &gt;= to create the new custom Age_Group of 24 to 67 and 68 and above.\npivot_wider() is used to transform data from long format to wide format so that the ageing ratio can be calculated correctly.\nggplot() is used to plot the horizontal bar chart, using reorder() to reorder the x-axis so that the bars are sorted by ratio.\ngeom_col() is used to adjust the colour of the bars and geom_text() is used to add labels to the bars, using hjust to push the labels to the right of each bar.\ncoord_flip() is used to flip x and y axes and make it a horizontal bar chart.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nadjusted_ageing_ratio_by_region &lt;- resident_regioned %&gt;%\n  mutate(Age_numeric = as.numeric(as.character(Age))) %&gt;%\n  filter(!is.na(Age_numeric)) %&gt;%\n  mutate(Age_Group = case_when(\n    Age_numeric &gt;= 68 ~ \"68+\",\n    Age_numeric &gt;= 24 & Age_numeric &lt;= 67 ~ \"24-67\",\n    TRUE ~ \"Other\"\n  )) %&gt;%\n  filter(Age_Group != \"Other\") %&gt;%\n  group_by(Region, Age_Group) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  pivot_wider(names_from = Age_Group, values_from = Population) %&gt;%\n  mutate(Adjusted_Ageing_Ratio = `68+` / `24-67`)\n\nggplot(adjusted_ageing_ratio_by_region, aes(x = reorder(Region, Adjusted_Ageing_Ratio), y = Adjusted_Ageing_Ratio)) +\n  geom_col(fill = \"#80CBC4\") +\n  geom_text(aes(label = round(Adjusted_Ageing_Ratio, 3)), hjust = -0.1) +\n  expand_limits(y = max(adjusted_ageing_ratio_by_region$Adjusted_Ageing_Ratio) * 1.1) +\n  labs(\n    title = \"Ratio of Retirees(68YO+) to Working Adults(24-67YO)\",\n    x = \"Region\",\n    y = \"Dependency Ratio\"\n  ) +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\nObservation: From the bar graphs above, it can be seen that the ratio of retirees to working adults is the largest in the Central and the smallest in the North, meaning that there are more retirees to working adults living in Central compared to the North. Additionally, the ratio hovers around 0.2+ for most areas, meaning that there are about 1 retiree to 4 working adults in Singapore, which is a healthy dependency ratio."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#bar-graph-of-dependency-ratio",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#bar-graph-of-dependency-ratio",
    "title": "Take-Home Exercise 1: Creating Data Visualisation that is enlightening and truthful",
    "section": "3.3 Bar Graph of Dependency Ratio",
    "text": "3.3 Bar Graph of Dependency Ratio\nThe dependency ratio is a demographic measure that indicates the ratio of dependents (those typically not in the labour force) to the working-age population. Dependents are usually defined as those under 15 and above 65 years old.\nWith these information, the dependency ratio of the population in Singapore in the different regions will be calculated. This information will reflect the proportion of individuals who are likely to be economically dependent on others.\nadjusted_ageing_ratio_by_region is the new object created to add new custom age groups.\nmutate() is used to change the item to numeric so that i am able to use &lt;= and &gt;= to create the new custom Age_Group of 24 to 67 and 68 and above.\npivot_wider() is used to transform data from long format to wide format so that the ageing ratio can be calculated correctly.\nggplot() is used to plot the horizontal bar chart, using reorder() to reorder the x-axis so that the bars are sorted by ratio.\ngeom_col() is used to adjust the colour of the bars and geom_text() is used to add labels to the bars, using hjust to push the labels to the right of each bar.\ncoord_flip() is used to flip x and y axes and make it a horizontal bar chart.\n\nThe PlotThe Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nadjusted_ageing_ratio_by_region &lt;- resident_regioned %&gt;%\n  mutate(Age_numeric = as.numeric(as.character(Age))) %&gt;%\n  filter(!is.na(Age_numeric)) %&gt;%\n  mutate(Age_Group = case_when(\n    Age_numeric &lt; 15 | Age_numeric &gt;= 65 ~ \"&lt; 15 or &gt;=65\",\n    Age_numeric &gt;= 15 & Age_numeric &lt;= 64 ~ \"15-64\",\n    TRUE ~ \"Other\"\n  )) %&gt;%\n  filter(Age_Group != \"Other\") %&gt;%\n  group_by(Region, Age_Group) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  pivot_wider(names_from = Age_Group, values_from = Population) %&gt;%\n  mutate(Adjusted_Ageing_Ratio = `&lt; 15 or &gt;=65` / `15-64`)\n\nggplot(adjusted_ageing_ratio_by_region, aes(x = reorder(Region, Adjusted_Ageing_Ratio), y = Adjusted_Ageing_Ratio)) +\n  geom_col(fill = \"#80CBC4\") +\n  geom_text(aes(label = round(Adjusted_Ageing_Ratio, 3)), hjust = -0.1) +\n  expand_limits(y = max(adjusted_ageing_ratio_by_region$Adjusted_Ageing_Ratio) * 1.1) +\n  labs(\n    title = \"Ratio of Dependents to Working Adults\",\n    x = \"Region\",\n    y = \"Dependency Ratio\"\n  ) +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\nObservation: From the bar graphs above, it can be seen that the dependency ratio (Population aged&lt;15 and &gt;65 / Population aged 15-65) ranges from 0.402 to 0.528. A ratio of 0.4 means that for every 2.5 working adults, there is 1 dependent, and a ratio of 0.528 means that for every 1.9 working adult, there is 1 dependent.\nThis average out to about 1 dependent to 2 working adults in Singapore, showing a healthy demographic structure."
  }
]