{
  "hash": "836653302151905f63922d849cb73b2e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 1\"\ndate: 11 Apr 2025\ndate-modified: \"last-modified\"\nauthor: \"Liaw Ying Ting, Celin\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# Getting Started\n\n## Install and launching R packages\n\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they willl be launched into R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse)\n```\n:::\n\n\n\n## Importing the data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\n\n# Plotting Charts\n\n## Plotting a simple bar chart\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n## Plotting Bar Chart of Science score Distribution\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x = SCIENCE)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"Yellow\", \n                 fill=\"Blue\") +\n  ggtitle(\"Distribution of Science scores\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n## Plotting a Box Plot of the English scores of the different races\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(y = ENGLISH, \n           x= RACE)) +\n  geom_boxplot()                     \n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## Plotting a Scatter Plot of the Science vs Math scores\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= SCIENCE, y=MATHS)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Plotting a Line graph of the scores of the different classes\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Plotting a Violin Plot of science scores in the different classes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(y = SCIENCE, \n           x= CLASS)) +\n  geom_violin()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n## Plotting Age-Sex Pyramid (Using CLASS as Proxy for Age Group)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npyramid_data <- exam_data %>% group_by(CLASS, GENDER) %>% summarise(Count = n(), .groups = \"drop\") %>% mutate(Count = ifelse(GENDER == \"Male\", -Count, Count))\n\nggplot(pyramid_data, aes(x = CLASS, y = Count, fill = GENDER)) + geom_bar(stat = \"identity\") + coord_flip() + labs(title = \"Class-Gender Pyramid\", x = \"Class\", y = \"Number of Students\") + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n## Plotting Pareto Chart of Race\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(qcc)\n\nrace_freq <- exam_data %>%\n  count(RACE, sort = TRUE)\n\npareto.chart(race_freq$n, names = race_freq$RACE,\n             main = \"Pareto Chart of Race\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   \nPareto chart analysis for race_freq$n\n     Frequency  Cum.Freq. Percentage Cum.Percent.\n  A 193.000000 193.000000  59.937888    59.937888\n  B 108.000000 301.000000  33.540373    93.478261\n  C  12.000000 313.000000   3.726708    97.204969\n  D   9.000000 322.000000   2.795031   100.000000\n```\n\n\n:::\n:::\n\n\n\n## Plotting Trellis Display for English Scores\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n# Reshape to long format\nlong_avg_data <- exam_data %>%\n  pivot_longer(cols = c(ENGLISH), \n               names_to = \"Subject\", \n               values_to = \"Score\") %>%\n  group_by(CLASS, GENDER, Subject) %>%\n  summarise(Avg_Score = mean(Score, na.rm = TRUE), .groups = \"drop\")\n\n# Set custom shapes and colors\ngender_shapes <- c(\"Female\" = 16, \"Male\" = 3)  # Circle and cross\ngender_colors <- c(\"Female\" = \"darkgreen\", \"Male\" = \"orangered\")\n\n# Plot\nggplot(long_avg_data, aes(x = Avg_Score, y = Subject, color = GENDER, shape = GENDER)) +\n  geom_point(size = 3) +\n  facet_wrap(~ CLASS, ncol = 1, strip.position = \"right\") +\n  scale_color_manual(values = gender_colors) +\n  scale_shape_manual(values = gender_shapes) +\n  labs(\n    title = \"Average English Scores and Gender Across Classes\",\n    x = \"Average Score\",\n    y = NULL,\n    color = \"Gender\",\n    shape = \"Gender\"\n  ) +\n  theme_minimal(base_size = 13) +\n  theme(\n    strip.text = element_text(face = \"bold\", size = 12),\n    axis.text.y = element_text(size = 11, hjust = 1),  # Justified and consistent label styling\n    panel.spacing = unit(1, \"lines\"),\n    legend.position = \"top\",\n    strip.background = element_blank(),  # Optional: remove background for facet labels\n    axis.title.y = element_blank()  # Remove y-axis title for more space\n  ) +\n  scale_y_discrete(labels = function(x) str_wrap(x, width = 10))  # Wrap y-axis labels\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Hands-on_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}