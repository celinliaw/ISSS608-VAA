{
  "hash": "c78a3c87231bba50c12654a4b82d5567",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 4 Part 1\"\nauthor: \"Liaw Ying Ting, Celin\"\ndate: 7 May 2025\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# 4.1 Learning Outcome\n\nIn this chapter, we will be learning ridgeline plot and raincloud plot using ggplot2 and its extensions.\n\n# 4.2 Getting Started\n\n## 4.2.1 Installing and loading the packages\n\nThe following R Packages will be used:\n\n-   ggridges - a ggplot2 extension designed for plotting ridgeline plots\n\n-   ggdist - a ggplot2 extension designed for visualising distribution and uncertainty\n\n-   tidyverse - a family of R packages to meet the modern data science and visual communication needs\n\n-   ggthemes - a ggplot extension that provides the user additional themes, scales and geoms for the ggplots package\n\n-   colorspace - an R package that provides a broad toolbox for selecting individual color or color palettes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse)\n```\n:::\n\n\n\n## 4.2.2 Importing Data\n\nFor the purpose of this exercise, Exam_data.csv will be used.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam <- read_csv(\"Exam_data.csv\")\n```\n:::\n\n\n\n# 4.3 Visualising Distribution with Ridgeline Plot\n\nRidgeline plot is a data visualisation technique for revealing the distribution of a numeric value for several groups. Distribution can be represented using histograms or density plots, all aligned to the same horizontal scale and presented with a slight overlap.\n\nRidgeline plots make sense when:\n\n-   number of groups to represent is medium to high\n\n-   Classic window separation would take too much space\n\n-   there is a clear pattern in the result\n\n## 4.3.1 Plotting ridgeline graph: ggridges method\n\nGgridges provides two main geom to plot gridgeline plots: [geom_ridgeline()](https://wilkelab.org/ggridges/reference/geom_ridgeline.html) and [geom_density_ridges()](https://wilkelab.org/ggridges/reference/geom_density_ridges.html). The first one uses height values directly to draw the ridgelines and the second one estimates data densities and draw them using ridgelines.\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex04_Part1_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n### The Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n```\n:::\n\n\n:::\n\n## 4.3.2 Varying fill colors along the x axis\n\nTo fill the area under a ridgeline with colors that vary along the x axis, we can use [geom_ridgeline_gradient()](https://wilkelab.org/ggridges/reference/geom_density_ridges.html) or [geom_density_ridges()](https://wilkelab.org/ggridges/reference/geom_ridgeline_gradient.html). Both geoms work just like <code style=\"color: purple;\">geom_ridgeline()</code> and <code style=\"color: purple;\">geom_density_ridgeline()</code> except that they allow for varying fill colors. It does not allow for alpha transparency in the fill. Only can have changing fill colors or transparency, but not both.\n\n::: panel-tabset\n### The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex04_Part1_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n### The Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n```\n:::\n\n\n:::\n\n## 4.3.3 Mapping the probabilities directly onto colour\n\nThe ggridges package has a stat function called [stat_density_ridges()](https://wilkelab.org/ggridges/reference/stat_density_ridges.html) and is used to replace [stat_density()](https://ggplot2.tidyverse.org/reference/geom_density.html) of ggplot2.\n\nThe figure below is plotted by mapping the probabilities calculated by using <code style=\"color: purple;\">stat(ecdf)</code> which represent the empirical cumulative density function for the distribution of English score.\n\n::: panel-tabset\n### The Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_Part1_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n### The Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04_Part1_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n:::\n\nThe argument <code style=\"color: purple;\">calc_ecdf = TRUE</code> has to be added in <code style=\"color: purple;\">stat_density_ridges()</code>.\n",
    "supporting": [
      "Hands-on_Ex04_Part1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}