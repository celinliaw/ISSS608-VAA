{
  "hash": "0db2a619284b53bc4278473dab3293ad",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home_Ex02\"\nauthor: \"Liaw Ying Ting, Celin\"\ndate: 27 May 2025\ndate-modified: \"last-modified\"\n\nformat:\n  html:\n    code-fold: true\n    code-tools: true\n\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# Overview - Mini Challenge 3\n\nFor this take-home exercise 2, Mini-Challenge 3 will be chosen and the visualisation will be done on this topic. The background of the mini challenge and the questions will be listed below. For this mini challenge, I will only be displaying and addressing **Questions 2 and 3** below.\n\n# Background\n\nOver the past decade, the community of Oceanus has faced numerous transformations and challenges evolving from its fishing-centric origins. Following major crackdowns on illegal fishing activities, suspects have shifted investments into more regulated sectors such as the ocean tourism industry, resulting in growing tensions. This increased tourism has recently attracted the likes of international pop star Sailor Shift, who announced plans to film a music video on the island.\n\nClepper Jessen, a former analyst at FishEye and now a seasoned journalist for the Hacklee Herald, has been keenly observing these rising tensions. Recently, he turned his attention towards the temporary closure of Nemo Reef. By listening to radio communications and utilizing his investigative tools, Clepper uncovered a complex web of expedited approvals and secretive logistics. These efforts revealed a story involving high-level Oceanus officials, Sailor Shift’s team, local influential families, and local conservationist group The Green Guardians, pointing towards a story of corruption and manipulation.\n\n# Task and Question\n\nClepper diligently recorded all intercepted radio communications over the last two weeks. With the help of his intern, they have analyzed their content to identify important events and relationships between key players. The result is a knowledge graph describing the last two weeks on Oceanus. Clepper and his intern have spent a large amount of time generating this knowledge graph, and they would now like some assistance using it to answer the following questions.\n\n1.  **Clepper found that messages frequently came in at around the same time each day.**\n\n    -   Develop a graph-based visual analytics approach to identify any daily temporal patterns in communications.\n\n    -   How do these patterns shift over the two weeks of observations?\n\n    -   Focus on a specific entity and use this information to determine who has influence over them.\n\n2.  **Clepper has noticed that people often communicate with (or about) the same people or vessels, and that grouping them together may help with the investigation.**\n\n    -   Use visual analytics to help Clepper understand and explore the interactions and relationships between vessels and people in the knowledge graph.\n\n    -   Are there groups that are more closely associated? If so, what are the topic areas that are predominant for each group?\n\n        -   For example, these groupings could be related to: Environmentalism (known associates of Green Guardians), Sailor Shift, and fishing/leisure vessels.\n\n3.  **It was noted by Clepper’s intern that some people and vessels are using pseudonyms to communicate.**\n\n    -   Expanding upon your prior visual analytics, determine who is using pseudonyms to communicate, and what these pseudonyms are.\n\n        Some that Clepper has already identified include: “Boss”, and “The Lookout”, but there appear to be many more.\n\n        To complicate the matter, pseudonyms may be used by multiple people or vessels.\n\n    -   Describe how your visualizations make it easier for Clepper to identify common entities in the knowledge graph.\n\n    -   How does your understanding of activities change given your understanding of pseudonyms?\n\n4.  **Clepper suspects that Nadia Conti, who was formerly entangled in an illegal fishing scheme, may have continued illicit activity within Oceanus.**\n\n    -   Through visual analytics, provide evidence that Nadia is, or is not, doing something illegal.\n\n    -   Summarize Nadia’s actions visually. Are Clepper’s suspicions justified?\n\n**Reflection Questions**\n\n-   Given the task to develop visualizations for knowledge graphs, did you find that the challenge pushed you to develop new techniques for visual representation?\n\n-   Did you participate in last year’s challenge? If so, did your experience last year help prepare you for this year’s challenge?\n\n-   What was the most difficult part of working on this year’s data and what could have made it more accessible?\n\n# MC3 Kickstarter\n\n## Getting Started\n\nIn the code chunk below, `p_load()` of pacman package is used to load the R packages into R environment.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, jsonlite,\n               tidygraph, ggraph,\n               SmartEDA, lubridate,\n               dplyr, igraph,\n               grid)\n```\n:::\n\n\n\n## Import knowledge Graph Data\n\nFor this exercise, *mc3.json* file will be used. In the code chunk below, `fromJSON()` of jsonlite package is used to import *mc3.json* file into R and save the output object.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nMC3 <- fromJSON(\"data/MC3_graph.json\")\nMC3_schema <- fromJSON(\"data/MC3_schema.json\")\n```\n:::\n\n\n\n## Inspecting Knowledge graph structure\n\nIn the code chunk below, `glimpse()` is used to reveal the structure of the *mc3* knowledge graph.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(MC3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi FALSE\n $ graph     :List of 4\n  ..$ mode        : chr \"static\"\n  ..$ edge_default: Named list()\n  ..$ node_default: Named list()\n  ..$ name        : chr \"VAST_MC3_Knowledge_Graph\"\n $ nodes     :'data.frame':\t1159 obs. of  31 variables:\n  ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  ..$ findings         : chr [1:1159] NA NA NA NA ...\n  ..$ content          : chr [1:1159] NA NA NA NA ...\n  ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  ..$ results          : chr [1:1159] NA NA NA NA ...\n  ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  ..$ destination      : chr [1:1159] NA NA NA NA ...\n  ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  ..$ thing_collected  :'data.frame':\t1159 obs. of  2 variables:\n  .. ..$ type: chr [1:1159] NA NA NA NA ...\n  .. ..$ name: chr [1:1159] NA NA NA NA ...\n  ..$ reference        : chr [1:1159] NA NA NA NA ...\n  ..$ date             : chr [1:1159] NA NA NA NA ...\n  ..$ time             : chr [1:1159] NA NA NA NA ...\n  ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  ..$ operational_role : chr [1:1159] NA NA NA NA ...\n $ edges     :'data.frame':\t3226 obs. of  5 variables:\n  ..$ id         : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  ..$ source     : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  ..$ target     : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  ..$ type       : chr [1:3226] NA \"sent\" NA NA ...\n```\n\n\n:::\n:::\n\n\n\n## Extracting the edges and nodes tables\n\nNext, `as_tibble()` of tibble package is used to extract the nodes and links tibble data frames from *mc3* tibble dataframe into two separate tibble dataframes called *mc3_nodes* and *mc3_edges* respectively.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes <- as_tibble(MC3$nodes)\nmc3_edges <- as_tibble(MC3$edges)\n```\n:::\n\n\n\n## Initial EDA\n\nIn the code chunk below, `ExpCatViz()` of SmartEDA package is used to reveal the frequency distribution of all categorical fields in *mc3_nodes* tibble dataframe\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nExpCatViz(data=mc3_nodes,\n          col=\"lightblue\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[2]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[3]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[4]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-4.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[5]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[6]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-6.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[7]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-7.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[8]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-8.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[9]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-9.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[10]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-10.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[11]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-11.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[12]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-12.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[13]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-13.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n[[14]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-5-14.png){width=672}\n:::\n:::\n\n\n\nOn the other hand, code chunk below uses `ExpCATViz()` of SmartEDA package to reveal the frequency distribution of all categorical fields in *mc3_edges* tibble dataframe\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nExpCatViz(data=mc3_edges,\n          col=\"lightblue\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Data Cleaning and Wrangling\n\nThe code chunk below performs the following data cleaning tasks:\n\n-   convert values in id field into character data type\n\n-   exclude records with `id` value\n\n-   exclude records with similar id values\n\n-   exclude `thing_collected` field\n\n-   save the cleaned tibble dataframe into a new tibble datatable called `mc_nodes_cleaned`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes_cleaned <- mc3_nodes %>%\n  mutate(id = as.character(id)) %>%\n  filter(!is.na(id)) %>%\n  distinct(id, .keep_all = TRUE) %>%\n  select(-thing_collected)\n```\n:::\n\n\n\n## Cleaning and wrangling edges\n\nNext, the code chunk will be used to:\n\n-   rename source and target fields to form_id and to_id respectively\n\n-   convert values in from_id and to_id fields to character data type\n\n-   exclude values in from_id and to_id which is not found in the id field of mc3_nodes_cleaned\n\n-   exclude records whereby from_id and/or to_id values are missing\n\n-   save the cleaned tibble dataframe and call it mc3_edges_cleaned\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_edges_cleaned <- mc3_edges %>%\n  rename(from_id = source,\n         to_id = target) %>%\n  mutate(across(c(from_id, to_id),\n                as.character)) %>%\n  filter(from_id %in% mc3_nodes_cleaned$id,\n         to_id %in% mc3_nodes_cleaned$id) %>%\n  filter(!is.na(from_id), !is.na(to_id))\n```\n:::\n\n\n\nNext, code chunk below will be used to create mapping of character id in `mc3_nodes_cleaned` to row index.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnode_index_lookup <- mc3_nodes_cleaned %>%\n  mutate(.row_id = row_number()) %>%\n  select(id, .row_id)\n```\n:::\n\n\n\nNext, the code chunk below will be used to join and convert `from_id` and `to_id` to integer indices. At the same time, we will drop rows with unmatched nodes.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_edges_indexed <- mc3_edges_cleaned %>%\n  left_join(node_index_lookup, \n            by = c(\"from_id\" = \"id\")) %>%\n  rename(from = .row_id) %>%\n  left_join(node_index_lookup, \n            by = c(\"to_id\" = \"id\")) %>%\n  rename(to = .row_id) %>%\n  select(from, to, is_inferred, type) %>%\n  filter(!is.na(from) & !is.na(to))  \n```\n:::\n\n\n\nNext, the code chunk below is used to subset nodes to only those referenced by edges\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nused_node_indices <- sort(\n  unique(c(mc3_edges_indexed$from, \n           mc3_edges_indexed$to)))\n\nmc3_nodes_final <- mc3_nodes_cleaned %>%\n  slice(used_node_indices) %>%\n  mutate(new_index = row_number())\n```\n:::\n\n\n\nWe will then use th code chunk below to rebuild lookup from old index to new index\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nold_to_new_index <- tibble(\n  old_index = used_node_indices,\n  new_index = seq_along(\n    used_node_indices))\n```\n:::\n\n\n\nLastly, the code chunk below will be used to update edge indices to match new node table\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_edges_final <- mc3_edges_indexed %>%\n  left_join(old_to_new_index, \n            by = c(\"from\" = \"old_index\")) %>%\n  rename(from_new = new_index) %>%\n  left_join(old_to_new_index, \n            by = c(\"to\" = \"old_index\")) %>%\n  rename(to_new = new_index) %>%\n  select(from = from_new, to = to_new, \n         is_inferred, type)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(mc3_edges_final)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,226\nColumns: 4\n$ from        <int> 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3…\n$ to          <int> 1138, 357, 747, 895, 876, 888, 896, 145, 404, 876, 888, 92…\n$ is_inferred <lgl> TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, FALSE, T…\n$ type        <chr> NA, \"sent\", NA, NA, NA, NA, NA, \"sent\", \"sent\", NA, NA, NA…\n```\n\n\n:::\n:::\n\n\n\n# Building the tidygraph object\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_graph <- tbl_graph(\n  nodes = mc3_nodes_final,\n  edges = mc3_edges_final,\n  directed = TRUE\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(mc3_graph)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nClasses 'tbl_graph', 'igraph'  hidden list of 10\n $ : num 1159\n $ : logi TRUE\n $ : num [1:3226] 0 0 0 0 0 0 0 1 1 1 ...\n $ : num [1:3226] 1137 356 746 894 875 ...\n $ : NULL\n $ : NULL\n $ : NULL\n $ : NULL\n $ :List of 4\n  ..$ : num [1:3] 1 0 1\n  ..$ : Named list()\n  ..$ :List of 31\n  .. ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  .. ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  .. ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  .. ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  .. ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  .. ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  .. ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ findings         : chr [1:1159] NA NA NA NA ...\n  .. ..$ content          : chr [1:1159] NA NA NA NA ...\n  .. ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ results          : chr [1:1159] NA NA NA NA ...\n  .. ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  .. ..$ destination      : chr [1:1159] NA NA NA NA ...\n  .. ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  .. ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  .. ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  .. ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  .. ..$ reference        : chr [1:1159] NA NA NA NA ...\n  .. ..$ date             : chr [1:1159] NA NA NA NA ...\n  .. ..$ time             : chr [1:1159] NA NA NA NA ...\n  .. ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  .. ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  .. ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  .. ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  .. ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  .. ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  .. ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  .. ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  .. ..$ operational_role : chr [1:1159] NA NA NA NA ...\n  .. ..$ new_index        : int [1:1159] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ :List of 2\n  .. ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  .. ..$ type       : chr [1:3226] NA \"sent\" NA NA ...\n $ :<environment: 0x000001f9f2b629a0> \n - attr(*, \"active\")= chr \"nodes\"\n```\n\n\n:::\n:::\n\n\n\n# Visualising the knowledge graph\n\nSeveral of the ggraph layouts involve randomisation. In order to ensure reproducibility, it is necessary to set the seed value before plotting by using the code chunk below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n```\n:::\n\n\n\nIn the code chunk below, ggraph functions are used to create the whole graph\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(mc3_graph, \n       layout = \"fr\") +\n  geom_edge_link(alpha = 0.3, \n                 colour = \"gray\") +\n  geom_node_point(aes(color = `type`), \n                  size = 4) +\n  geom_node_text(aes(label = type), \n                 repel = TRUE, \n                 size = 1.0) +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n# Question 2\n\n::: panel-tabset\n### Data Cleaning\n\nFor nodes, the code `filter()` will be used to filter out only *Person and Vessel* from *Entity*, and *Communication* from *Event* and their *relationship.*\n\nAfter this filter, the nodes only contain:\n\n-   entity nodes whose sub_type is Person or Vessel\n\n-   Event nodes whose sub_type is Communication\n\n-   Any node whose type is Relationship.\n\n`mutate()` adds a new column called idx to the filtered data frame\n\n`select()` extracts 2 columns from *selected_nodes* and give them a new id and rename to *id_map*\n\nFor Edges, `filter()` keeps only those where both endpoints are in the *old* column of *id_map.*\n\n`left_join()` matches each row's *to* value against *id_map\\$old* and brings in *id_map\\$new* for that *to* node and renames it *to_new*. Same thing for the *from* column.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselected_nodes <- mc3_nodes_final %>%\n  filter(\n    (type == \"Entity\"     & sub_type %in% c(\"Person\", \"Vessel\")) |\n    (type == \"Event\"      & sub_type == \"Communication\")      |\n    (type == \"Relationship\")\n  ) %>%\n  mutate(idx = row_number())\n\n# mapping old_index → new idx\nid_map <- selected_nodes %>%\n  select(old = new_index, new = idx)\n\n# 2. filter edges so both ends are in selected_nodes\nselected_edges <- mc3_edges_final %>%\n  filter(from %in% id_map$old, to %in% id_map$old) %>%\n  \n  # 3. re-index the endpoints\n  left_join(id_map, by = c(\"from\" = \"old\")) %>%\n  rename(from_new = new) %>%\n  left_join(id_map, by = c(\"to\"   = \"old\")) %>%\n  rename(to_new   = new) %>%\n  select(from = from_new, to = to_new, type)\n```\n:::\n\n\n\n### People/Vessel Vs Relationship Subtypes\n\nStep 1: we proceed to `filter()` only the edges that we want, specifically *sent, received and evidence_for*. The labels for the edges show \"sent\", \"received\" and \"evidence_for\" using `transmute()`.\n\nStep 2: We then build the node table and colour by sub_type which is called *group*. The label for the names/vessels will be placed under the node using *label.*\n\nStep 3: Draw a Visnetwork graph.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidyr)       # for pivot_longer()\nlibrary(visNetwork)\nlibrary(RColorBrewer)\n\n# 1. Build sender/receiver pairs and their relationship nodes\nsend_pairs <- mc3_edges_final %>%\n  filter(type == \"sent\") %>%\n  rename(sender = from, comm = to) %>%\n  select(sender, comm)\n\nrecv_pairs <- mc3_edges_final %>%\n  filter(type == \"received\") %>%\n  rename(receiver = to, comm = from) %>%\n  select(receiver, comm)\n\nrel_edges <- mc3_edges_final %>%\n  filter(type %in% c(\"evidence_for\", \"is_inferred\")) %>%\n  rename(rel = to, comm = from) %>%\n  select(rel, comm)\n\n# 2. Join to get each (sender, receiver, rel) for every communication event\ntriplets <- send_pairs %>%\n  inner_join(recv_pairs, by = \"comm\") %>%\n  inner_join(rel_edges, by = \"comm\") %>%\n  mutate(\n    person1 = pmin(sender, receiver),\n    person2 = pmax(sender, receiver)\n  ) %>%\n  distinct(person1, person2, rel, .keep_all = TRUE) %>%\n  select(person1, person2, rel)\n\n# 3. Collect unique node‐IDs used (persons/vessels and relationship nodes)\nnode_ids_used <- unique(c(triplets$person1, triplets$person2, triplets$rel))\n\n# 4. Build a lookup of node info for those IDs,\n#    but filter to only Person/Vessel entity subtypes and Relationship nodes\nnodes_sub <- mc3_nodes_final %>%\n  filter(new_index %in% node_ids_used) %>%\n  filter(\n    sub_type %in% c(\"Person\", \"Vessel\") |\n    type == \"Relationship\"\n  ) %>%\n  select(new_index, label, sub_type, type)\n\n# 4a. Define pleasing, non‐grey colors for entity subtypes\nentity_color_map <- tibble(\n  sub_type = c(\"Person\", \"Vessel\"),\n  color    = c(\"#2c7fb8\", \"#e6550d\")  # blue for Person, orange for Vessel\n)\n\n# 4b. Identify all relationship subtypes and assign distinct, visually pleasing colors\nrel_subtypes <- nodes_sub %>%\n  filter(type == \"Relationship\") %>%\n  distinct(sub_type) %>%\n  arrange(sub_type) %>%\n  pull(sub_type)\n\nn_rels <- length(rel_subtypes)\nif (n_rels > 0) {\n  base_palette <- brewer.pal(min(n_rels, 8), \"Set2\")\n  if (n_rels > length(base_palette)) {\n    rel_colors <- colorRampPalette(base_palette)(n_rels)\n  } else {\n    rel_colors <- base_palette[1:n_rels]\n  }\n  rel_color_map <- tibble(\n    sub_type = rel_subtypes,\n    color    = rel_colors\n  )\n} else {\n  rel_color_map <- tibble(sub_type = character(0), color = character(0))\n}\n\n# 4c. Combine entity and relationship color mappings\ncolor_map <- bind_rows(entity_color_map, rel_color_map)\n\n# 4d. Build nodes_vis with assigned colors (no grey)\nnodes_vis <- nodes_sub %>%\n  left_join(color_map, by = \"sub_type\") %>%\n  transmute(\n    id       = new_index,\n    label    = label,\n    sub_type = sub_type,\n    color    = color\n  )\n\n# 5. Build the visNetwork 'edges' data frame\n# 5a. Edges between the two people/vessels (no label)\nedges_comm_vis <- triplets %>%\n  transmute(\n    from   = person1,\n    to     = person2,\n    label  = \"\",     # no “comm” text\n    width  = 2,\n    arrows = \"to\"\n  )\n\n# 5b. For each triplet, connect both persons to the relationship node (no label)\nedges_rel_vis <- triplets %>%\n  pivot_longer(\n    cols      = c(person1, person2),\n    names_to  = NULL,\n    values_to = \"person\"\n  ) %>%\n  transmute(\n    from   = person,\n    to     = rel,\n    label  = \"\",    # no text here\n    width  = 1,\n    arrows = \"to\"\n  )\n\n# 5c. Combine both sets of edges\nedges_vis <- bind_rows(edges_comm_vis, edges_rel_vis)\n\n# 6. Draw the visNetwork with a dropdown filter by sub_type.\n#    Legend shows only subtypes in the graph, in oval shape, larger, and using our custom colors.\nvisNetwork(nodes_vis, edges_vis) %>%\n  visNodes(\n    borderWidth         = 1,\n    borderWidthSelected = 2\n  ) %>%\n  visEdges(\n    arrows = \"to\",\n    color  = list(color = \"#333333\", highlight = \"#FF0000\"),  # dark edge color\n    font   = list(align = \"middle\")\n  ) %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE,\n    selectedBy       = \"sub_type\"\n  ) %>%\n  visLegend(\n    addNodes = data.frame(\n      label = color_map$sub_type,\n      shape = \"ellipse\", \n      color = color_map$color,\n      size  = rep(20, nrow(color_map))\n    ),\n    useGroups = FALSE\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-b316f80421c5be0435d7\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-b316f80421c5be0435d7\">{\"x\":{\"nodes\":{\"id\":[1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,24,25,26,27,28,29,30,31,32,33,34,35,36,37,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159],\"label\":[\"Sam\",\"Kelly\",\"Nadia Conti\",\"Elise\",\"Liam Thorne\",\"Samantha Blake\",\"Davis\",\"Rodriguez\",\"Clepper Jensen\",\"Miranda Jordan\",\"The Intern\",\"The Lookout\",\"The Accountant\",\"Mrs. Money\",\"The Middleman\",\"Boss\",\"Small Fry\",\"Neptune\",\"Marlin\",\"Serenity\",\"Mako\",\"Reef Guardian\",\"Horizon\",\"Seawatch\",\"EcoVigil\",\"Sentinel\",\"Osprey\",\"Defender\",\"Northern Light\",\"Remora\",\"Knowles\",\"Friends\",\"Friends\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Unfriendly\",\"Unfriendly\",\"Unfriendly\",\"Unfriendly\",\"Unfriendly\"],\"sub_type\":[\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Vessel\",\"Friends\",\"Friends\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Unfriendly\",\"Unfriendly\",\"Unfriendly\",\"Unfriendly\",\"Unfriendly\"],\"color\":[\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#e6550d\",\"#e6550d\",\"#e6550d\",\"#e6550d\",\"#e6550d\",\"#e6550d\",\"#e6550d\",\"#e6550d\",\"#e6550d\",\"#e6550d\",\"#e6550d\",\"#e6550d\",\"#e6550d\",\"#e6550d\",\"#C592C5\",\"#C592C5\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#B3B3B3\",\"#B3B3B3\",\"#B3B3B3\",\"#B3B3B3\",\"#B3B3B3\"]},\"edges\":{\"from\":[1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,4,3,3,3,3,3,4,4,4,5,5,5,5,5,5,3,3,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,3,3,7,7,7,7,3,3,3,7,7,7,7,7,7,7,7,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,7,3,3,3,8,8,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,13,13,13,1,1,1,1,13,12,12,1,12,13,12,13,13,12,12,13,13,1,13,12,12,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,12,15,15,15,15,15,15,15,15,15,12,12,15,15,16,16,16,15,16,16,14,14,14,14,14,15,16,17,17,15,15,15,18,18,18,18,18,18,18,18,18,7,7,7,7,18,7,7,24,24,24,24,24,24,24,24,24,24,4,4,4,24,24,24,24,24,4,4,4,3,3,3,24,24,24,24,24,7,7,25,25,26,26,24,26,27,27,27,27,25,25,25,27,27,27,7,7,17,17,17,6,6,17,17,24,4,4,27,27,27,27,27,27,6,6,24,27,27,27,6,24,24,27,27,27,26,28,26,26,27,25,25,28,28,28,28,28,28,24,28,28,28,28,28,28,28,25,25,25,28,28,28,28,28,28,28,28,28,28,27,27,27,28,28,28,28,28,29,29,29,29,29,29,29,27,27,29,29,29,28,28,29,29,29,29,29,28,28,28,31,31,5,5,5,29,29,31,31,31,31,31,31,31,29,27,29,29,29,27,27,27,29,28,28,28,29,29,27,27,3,3,3,27,27,27,27,27,27,27,27,27,27,28,30,28,28,28,27,27,27,27,27,27,24,24,27,24,24,27,27,24,24,24,24,24,24,27,27,3,3,3,3,27,7,7,7,7,1,2,1,2,1,2,1,2,3,3,5,3,24,3,5,3,5,3,4,3,4,3,4,3,4,3,4,3,4,5,5,3,5,4,5,5,17,5,31,5,31,3,5,5,6,6,6,6,27,6,27,6,27,7,27,7,7,7,36,7,36,7,36,7,36,7,7,7,24,7,24,7,27,7,7,3,7,3,7,7,7,7,7,7,27,7,27,7,27,7,7,3,7,7,7,7,17,7,17,7,27,7,36,8,8,8,8,8,17,8,17,7,8,7,8,8,8,8,8,8,8,8,8,8,17,3,8,3,8,8,8,8,8,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,12,13,12,15,12,13,12,13,12,15,12,15,12,15,12,15,12,15,12,15,12,12,12,12,13,32,1,13,12,13,12,13,13,13,29,13,14,17,14,17,14,17,14,16,14,16,15,17,15,17,15,17,15,17,15,17,15,17,15,17,15,17,15,17,12,15,15,17,15,17,15,24,15,24,15,27,15,36,12,15,15,16,16,17,15,16,16,17,16,17,14,16,14,16,14,16,14,16,15,17,15,17,15,17,15,17,18,27,18,36,18,36,18,36,18,36,18,36,7,18,7,18,7,18,7,18,7,18,6,17,36,36,5,5,5,6,27,5,5,27,28,28,28,28,32,5,31,31,31,5,5,5,28,28,29,30,31,31,28,28,29,35,27,27,28,32,32,28,28,28,28,31,29,29,30,36,36,17,15,24,24,24,27,24,24,36,24,7,8,8,3,3,24,24,36,24,27,24,27,24,26,24,26,24,24,36,24,36,24,36,24,36,4,24,24,27,24,27,4,24,3,24,3,24,3,24,24,27,24,27,24,24,27,24,36,24,36,24,24,7,24,26,27,26,28,26,27,27,27,25,27,25,27,7,27,17,27,6,27,17,27,17,27,27,27,27,4,27,27,32,27,36,6,27,24,27,27,36,27,36,27,36,6,27,24,27,24,27,27,27,36,27,32,27,26,28,26,28,25,28,28,28,29,28,29,28,32,28,29,28,32,28,32,28,28,28,31,28,31,28,30,28,31,28,34,28,27,28,28,31,28,28,28,29,32,29,32,29,31,29,27,29,29,30,29,28,30,30,29,31,29,31,31,31,31,31,5,31,5,31,29,31,31,31,31,31,31,32,29,32,29,32,27,32,27,32,32,28,32,29,32,27,32,3,32,3,32,27,32,27,32,27,33,27,33,27,33,28,34,27,34,35,35,36,36,27,36,27,36,36,36,27,36,36,24,36,36,24,36,27,36,24,36,24,36,24,36,24,36,27,36,27,36,36,3,36,3,36,36,36,37,27,37,7,37,7,37,28,36,36,28,27,27,32,32,32,33,31,27,27,26,30,26,24,35,35,30,24],\"to\":[2,2,2,2,5,24,25,5,5,4,4,4,4,4,4,4,5,4,4,4,5,5,5,5,5,17,17,31,31,31,31,5,5,27,27,27,7,7,27,27,7,36,36,36,36,7,24,24,24,27,27,27,7,7,7,7,27,27,27,27,7,7,7,7,7,17,17,17,27,36,36,8,8,17,17,17,8,8,8,15,8,8,8,8,8,17,8,8,8,8,8,8,36,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,15,15,15,13,13,15,15,15,15,15,15,15,15,15,15,13,12,12,12,15,15,15,13,13,32,32,32,13,13,13,13,32,13,13,13,13,29,13,29,29,13,13,28,28,13,32,13,13,17,17,17,17,17,16,16,17,17,17,17,17,17,17,17,17,17,15,17,17,24,24,24,27,27,36,36,15,15,16,16,17,17,17,16,17,17,16,16,16,16,16,17,17,27,27,17,17,17,27,36,36,36,36,36,36,36,36,18,18,18,18,36,18,18,27,27,27,26,26,36,36,36,36,36,24,24,24,27,28,27,27,36,24,24,24,24,24,24,27,27,27,36,36,24,24,28,36,27,28,26,27,36,36,36,36,27,27,27,33,33,28,27,27,27,27,27,27,27,27,27,27,27,27,32,32,32,36,36,36,27,27,27,36,36,36,27,27,27,36,33,32,28,34,28,28,28,28,28,29,29,29,32,32,32,28,29,29,32,32,28,31,31,28,28,28,31,31,30,30,30,31,31,34,30,29,28,28,28,28,31,31,31,31,32,32,32,32,32,31,32,29,29,31,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,888,888,1138,1138,895,895,876,876,924,941,941,893,893,1067,1067,897,897,1157,1157,895,895,892,892,1144,1144,1060,1060,896,896,1014,996,1142,1142,1148,1148,1063,1063,1007,1007,956,956,1149,1149,971,1016,952,927,952,952,1006,1006,932,932,905,905,1088,1088,922,922,1004,1004,1122,1122,923,923,925,1088,1088,1088,951,951,1088,1088,945,945,900,900,1106,1106,1054,1088,1113,1136,1068,1068,963,963,964,964,1120,900,1120,1120,1153,1153,1088,1088,932,932,899,899,905,905,1091,1091,925,925,913,913,885,885,932,932,905,905,1046,1114,1107,1107,932,932,905,905,1114,1114,932,932,905,905,1115,1115,1114,1114,889,889,1127,1127,1130,1130,1129,1129,1131,1131,1133,1133,1098,1098,1152,1152,908,908,980,980,981,981,1128,1128,1093,1093,1132,1132,1094,1094,1134,1134,983,983,985,985,1042,1042,958,958,959,959,1151,1151,1010,1010,875,875,901,901,977,977,901,901,884,884,932,932,977,977,1039,1039,1117,1117,951,951,954,954,1147,1147,910,910,932,932,984,984,1139,1139,987,1057,1057,929,1061,1061,1154,1154,1074,1074,1154,1154,903,903,877,877,887,887,884,884,977,977,1095,1095,1096,1096,921,921,913,913,878,878,928,928,1068,1068,932,932,1041,1041,937,937,1104,1104,894,894,1109,1109,887,887,1006,1006,878,878,878,878,887,887,990,990,1074,1074,902,902,878,878,1104,1104,1137,1137,1099,1099,1100,1100,1024,1024,882,882,909,909,938,938,939,939,1116,1116,898,898,899,899,994,994,904,904,1083,1083,909,1032,972,1124,1013,1001,1006,1006,1006,1027,1028,932,1006,961,946,1009,988,1059,956,1062,1006,1015,970,1010,1002,1123,1017,1020,979,1035,992,1006,1018,1003,1003,932,1031,936,1006,1051,1080,993,986,1022,1087,993,1078,916,1113,1101,928,1101,1102,1034,1101,1064,1065,1117,1117,1118,1117,951,900,928,1121,900,1088,933,933,1064,1064,1033,1033,928,928,1037,934,934,1101,1101,1047,1047,935,935,1040,1040,1045,1045,937,937,1048,1048,890,890,891,891,892,892,1105,1105,942,942,991,1111,1111,1117,1117,1113,1113,1068,1072,968,968,907,907,907,907,931,880,1088,1089,1090,1090,881,881,925,925,932,932,1030,1030,1156,1156,1006,1006,932,1050,925,1045,1045,932,932,1054,1054,1054,1054,932,932,943,943,1045,1045,951,951,1049,1049,1110,1110,1050,1050,1112,1069,1069,1077,1077,999,917,917,918,918,1053,1053,929,1075,1075,929,929,1043,1043,1141,1141,986,986,1080,1080,1043,1043,1052,1052,1055,1055,1073,1073,989,989,961,961,1119,1079,1079,961,961,1011,1012,961,1018,1018,1025,1025,1023,1023,1145,1036,1036,1076,1076,1023,1056,1056,1066,1022,1022,1035,1035,955,955,1006,1006,989,989,957,957,998,998,1081,1081,974,974,1082,1082,1136,1136,1038,1038,920,920,1136,1136,1097,1140,1140,1140,1140,1140,1140,1146,1146,1006,1006,1008,1008,953,953,1070,1070,950,950,962,962,1058,1058,961,961,919,1155,879,944,883,883,944,944,912,914,1044,1044,900,1044,1044,1044,940,940,1049,1049,1050,1050,1049,1049,1150,1150,1071,1071,1068,1068,965,965,973,1125,1125,973,973,1126,997,966,1084,1084,906,906,1086,1086,1015,915,1135,961,930,1009,953,969,1009,1021,956,1054,920,1005,1092,907,951,948,949,960,933],\"labelwidth\":[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"arrows\":[\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"borderWidth\":1,\"borderWidthSelected\":2},\"manipulation\":{\"enabled\":false},\"edges\":{\"arrows\":\"to\",\"color\":{\"color\":\"#333333\",\"highlight\":\"#FF0000\"},\"font\":{\"align\":\"middle\"}}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false,\"variable\":\"sub_type\",\"main\":\"Select by sub_type\",\"values\":[\"AccessPermission\",\"Colleagues\",\"Coordinates\",\"Friends\",\"Jurisdiction\",\"Operates\",\"Person\",\"Reports\",\"Suspicious\",\"Unfriendly\",\"Vessel\"]},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"highlight\":{\"enabled\":true,\"hoverNearest\":false,\"degree\":1,\"algorithm\":\"all\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":false,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"},\"legend\":{\"width\":0.2,\"useGroups\":false,\"position\":\"left\",\"ncol\":1,\"stepX\":100,\"stepY\":100,\"zoom\":true,\"nodes\":{\"label\":[\"Person\",\"Vessel\",\"AccessPermission\",\"Colleagues\",\"Coordinates\",\"Friends\",\"Jurisdiction\",\"Operates\",\"Reports\",\"Suspicious\",\"Unfriendly\"],\"shape\":[\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\"],\"color\":[\"#2c7fb8\",\"#e6550d\",\"#66C2A5\",\"#E9936A\",\"#A89BB0\",\"#C592C5\",\"#C6B18B\",\"#C7D846\",\"#F8D348\",\"#DEC197\",\"#B3B3B3\"],\"size\":[20,20,20,20,20,20,20,20,20,20,20]},\"nodesToDataframe\":true}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n### People vs Relationship Subtype\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 7. Exclude all “Vessel” nodes and any edges involving them\nnodes_vis2 <- nodes_vis %>%\n  filter(sub_type != \"Vessel\")\n\nedges_vis2 <- edges_vis %>%\n  filter(from %in% nodes_vis2$id, to %in% nodes_vis2$id)\n\n# 8. Build a reduced legend data.frame for the remaining subtypes\nlegend_map2 <- color_map %>%\n  filter(sub_type %in% unique(nodes_vis2$sub_type))\n\n# 9. Draw the new visNetwork without Vessel nodes\nvisNetwork(nodes_vis2, edges_vis2) %>%\n  visNodes(\n    borderWidth         = 1,\n    borderWidthSelected = 2\n  ) %>%\n  visEdges(\n    arrows = \"to\",\n    color  = list(color = \"#333333\", highlight = \"#FF0000\"),\n    font   = list(align = \"middle\")\n  ) %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE,\n    selectedBy       = \"sub_type\"\n  ) %>%\n  visLegend(\n    addNodes = data.frame(\n      label = legend_map2$sub_type,\n      shape = \"ellipse\",\n      color = legend_map2$color,\n      size  = rep(20, nrow(legend_map2))\n    ),\n    useGroups = FALSE\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-ba0d097b346deca10955\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ba0d097b346deca10955\">{\"x\":{\"nodes\":{\"id\":[1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159],\"label\":[\"Sam\",\"Kelly\",\"Nadia Conti\",\"Elise\",\"Liam Thorne\",\"Samantha Blake\",\"Davis\",\"Rodriguez\",\"Clepper Jensen\",\"Miranda Jordan\",\"The Intern\",\"The Lookout\",\"The Accountant\",\"Mrs. Money\",\"The Middleman\",\"Boss\",\"Small Fry\",\"Friends\",\"Friends\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Unfriendly\",\"Unfriendly\",\"Unfriendly\",\"Unfriendly\",\"Unfriendly\"],\"sub_type\":[\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Person\",\"Friends\",\"Friends\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"Colleagues\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"AccessPermission\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Reports\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Jurisdiction\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Coordinates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Operates\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Suspicious\",\"Unfriendly\",\"Unfriendly\",\"Unfriendly\",\"Unfriendly\",\"Unfriendly\"],\"color\":[\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#2c7fb8\",\"#C592C5\",\"#C592C5\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#E9936A\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#66C2A5\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#F8D348\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#C6B18B\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#A89BB0\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#C7D846\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#DEC197\",\"#B3B3B3\",\"#B3B3B3\",\"#B3B3B3\",\"#B3B3B3\",\"#B3B3B3\"]},\"edges\":{\"from\":[1,1,1,1,3,3,3,3,3,3,3,3,3,3,4,3,3,3,3,3,4,4,4,5,5,3,3,7,7,7,7,7,7,3,3,3,3,3,7,7,7,7,7,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,7,3,3,3,8,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,1,1,1,1,1,12,12,1,12,12,12,12,1,12,12,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,12,15,15,12,12,15,15,16,16,16,15,16,16,14,14,14,14,14,15,16,15,15,15,7,7,7,7,7,7,1,2,1,2,1,2,1,2,3,3,5,3,3,5,3,5,3,4,3,4,3,4,3,4,3,4,3,4,5,5,3,5,4,5,5,17,5,5,3,5,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,3,7,3,7,7,7,7,7,7,7,7,7,7,3,7,7,7,7,17,7,17,7,7,8,8,8,8,8,17,8,17,7,8,7,8,8,8,8,8,8,8,8,8,8,17,3,8,3,8,8,8,8,8,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,12,13,12,15,12,13,12,13,12,15,12,15,12,15,12,15,12,15,12,15,12,12,12,12,13,1,13,12,13,12,13,13,13,13,14,17,14,17,14,17,14,16,14,16,15,17,15,17,15,17,15,17,15,17,15,17,15,17,15,17,15,17,12,15,15,17,15,17,15,15,15,15,12,15,15,16,16,17,15,16,16,17,16,17,14,16,14,16,14,16,14,16,15,17,15,17,15,17,15,17,18,18,18,18,18,18,7,18,7,18,7,18,7,18,7,18,6,17,5,5,5,6,5,5,5,5,5,5,17,15,7,8,8,3,3,4,4,3,3,3,7,7,17,6,17,17,4,6,6,5,5,3,3,3,3,7,7],\"to\":[2,2,2,2,5,5,5,4,4,4,4,4,4,4,5,4,4,4,5,5,5,5,5,17,17,5,5,7,7,7,7,7,7,7,7,7,7,7,7,7,17,17,17,8,8,17,17,17,8,8,8,15,8,8,8,8,8,17,8,8,8,8,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,15,15,15,13,13,15,15,15,15,15,15,15,15,15,15,13,12,12,12,15,15,15,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,17,17,17,17,16,16,17,17,17,17,17,17,17,17,17,17,15,17,17,15,15,16,16,17,17,17,16,17,17,16,16,16,16,16,17,17,17,17,17,18,18,18,18,18,18,888,888,1138,1138,895,895,876,876,924,941,941,893,1067,1067,897,897,1157,1157,895,895,892,892,1144,1144,1060,1060,896,896,1014,996,1142,1142,1148,1148,1063,1063,1007,956,1149,1149,971,1016,952,927,952,1006,932,905,1088,1088,922,1004,1122,923,925,1088,1088,951,1088,945,945,900,900,1106,1106,1054,1088,1113,1136,1068,963,964,1120,900,1120,1120,1153,1153,1088,1088,932,932,899,905,1091,1091,925,925,913,913,885,885,932,932,905,905,1046,1114,1107,1107,932,932,905,905,1114,1114,932,932,905,905,1115,1115,1114,1114,889,889,1127,1127,1130,1130,1129,1129,1131,1131,1133,1133,1098,1098,1152,1152,908,908,980,980,981,981,1128,1128,1093,1093,1132,1132,1094,1094,1134,1134,983,983,985,985,1042,1042,958,958,959,959,1151,1151,1010,1010,875,875,901,901,977,977,901,901,884,884,932,932,977,977,1039,1039,1117,1117,951,951,954,954,1147,1147,910,932,932,984,984,1139,1139,987,1057,929,1061,1061,1154,1154,1074,1074,1154,1154,903,903,877,877,887,887,884,884,977,977,1095,1095,1096,1096,921,921,913,913,878,878,928,928,1068,1068,932,932,1041,937,1104,894,1109,1109,887,887,1006,1006,878,878,878,878,887,887,990,990,1074,1074,902,902,878,878,1104,1104,1137,1137,1099,1099,1100,1100,1024,882,909,938,939,1116,898,898,899,899,994,994,904,904,1083,1083,909,1032,1013,1001,1006,1006,1027,1028,1059,1015,970,1010,1101,928,1118,1117,951,900,928,1040,1048,890,891,892,968,925,932,1030,1156,1006,1045,1054,1049,989,957,1146,1006,1125,973,906,1086],\"labelwidth\":[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"arrows\":[\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\",\"to\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"borderWidth\":1,\"borderWidthSelected\":2},\"manipulation\":{\"enabled\":false},\"edges\":{\"arrows\":\"to\",\"color\":{\"color\":\"#333333\",\"highlight\":\"#FF0000\"},\"font\":{\"align\":\"middle\"}}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false,\"variable\":\"sub_type\",\"main\":\"Select by sub_type\",\"values\":[\"AccessPermission\",\"Colleagues\",\"Coordinates\",\"Friends\",\"Jurisdiction\",\"Operates\",\"Person\",\"Reports\",\"Suspicious\",\"Unfriendly\"]},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"highlight\":{\"enabled\":true,\"hoverNearest\":false,\"degree\":1,\"algorithm\":\"all\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":false,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"},\"legend\":{\"width\":0.2,\"useGroups\":false,\"position\":\"left\",\"ncol\":1,\"stepX\":100,\"stepY\":100,\"zoom\":true,\"nodes\":{\"label\":[\"Person\",\"AccessPermission\",\"Colleagues\",\"Coordinates\",\"Friends\",\"Jurisdiction\",\"Operates\",\"Reports\",\"Suspicious\",\"Unfriendly\"],\"shape\":[\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\",\"ellipse\"],\"color\":[\"#2c7fb8\",\"#66C2A5\",\"#E9936A\",\"#A89BB0\",\"#C592C5\",\"#C6B18B\",\"#C7D846\",\"#F8D348\",\"#DEC197\",\"#B3B3B3\"],\"size\":[20,20,20,20,20,20,20,20,20,20]},\"nodesToDataframe\":true}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n:::\n\n### Q2 Part A\n\nBy selecting the different sub-groups from the drop-down below, we can conclude the following information.\n\n**Colleagues:**\n\n-   Boss, Mrs Money and The Middleman\n\n-   Boss, The Accountant and The Middleman\n\n-   The Lookout, The Intern and Mrs Money\n\n-   Mrs Money and The Intern\n\n-   Boss and Mrs Money\n\n-   Boss and Rodriguez\n\n-   Small Fry and Davis\n\n-   Nadia Conti and Davis\n\n-   Nadia Conti and Elise\n\n-   Nadia Conti and Liam Thorne\n\n-   Sam and Kelly\n\n**Friends:**\n\n-   Sam and Kelly\n\n-   The Intern and The Lookout\n\n**Unfriendly:**\n\n-   Elise and Nadia Conti\n\n**Suspicious:**\n\n-   Boss, Mrs Money, The Intern, The Lookout, The Accountant\n-   Sam, Kelly, Liam Thorne, Elise, Nadia Conti, Davis\n\nFrom the above results, it can be seen that either Sam or Kelly holds the status of The Intern and The Lookout as they are the only ones with the relationship of friends in the conclusion above.\n\nBoss seems to be the one with the most information and power as Mrs Money, The Accountant and The Middlman transmit information to The Boss only\n\n## Q2 Part B\n\nBased on the question 2b, I have categorised them into the 3 different Entity Subgroups: Person, Organisation and Vessel\n\n::: panel-tabset\n### Group by organisation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidytext)\nlibrary(wordcloud)\n\n# 1. Extract communication‐event nodes with their new_index and content\ncomm_nodes <- mc3_nodes_final %>%\n  filter(type == \"Event\", sub_type == \"Communication\") %>%\n  select(event_index = new_index, content)\n\n# 2. Build a mapping from communication events to entities (Organization subtype)\nsend_map <- mc3_edges_final %>%\n  filter(type == \"sent\") %>%\n  transmute(entity_index = from, event_index = to)\n\nrecv_map <- mc3_edges_final %>%\n  filter(type == \"received\") %>%\n  transmute(event_index = from, entity_index = to)\n\nevent_to_entity <- bind_rows(send_map, recv_map)\n\n# 3. Join event_to_entity with comm_nodes, then keep only Organization entities\ncomm_by_entity <- event_to_entity %>%\n  inner_join(comm_nodes, by = \"event_index\") %>%\n  inner_join(\n    mc3_nodes_final %>% \n      select(entity_index = new_index, sub_type, label),\n    by = \"entity_index\"\n  ) %>%\n  filter(sub_type == \"Organization\") %>%\n  select(organization = label, content)\n\n# 4. Collapse all texts per organization\norg_texts <- comm_by_entity %>%\n  group_by(organization) %>%\n  summarize(text = paste(content, collapse = \" \"), .groups = \"drop\")\n\n# 5. Tokenize, remove stop‐words, and compute word frequencies per organization\ntidy_org_words <- org_texts %>%\n  unnest_tokens(word, text) %>%\n  anti_join(stop_words, by = \"word\") %>%\n  count(organization, word, sort = TRUE)\n\n# 6. Plot one word cloud per organization\norg_list <- unique(tidy_org_words$organization)\nn_orgs   <- length(org_list)\nn_cols   <- 3\nn_rows   <- ceiling(n_orgs / n_cols)\n\npar(mfrow = c(n_rows, n_cols), mar = c(0, 0, 0, 0))\nfor (org in org_list) {\n  freq_tbl <- tidy_org_words %>% filter(organization == org)\n  if (nrow(freq_tbl) == 0) {\n    plot.new()\n    title(main = org)\n    next\n  }\n  v <- setNames(freq_tbl$n, freq_tbl$word)\n  wordcloud(\n    words        = names(v),\n    freq         = as.numeric(v),\n    max.words    = 20,\n    scale        = c(3, 0.5),\n    random.order = FALSE\n  )\n  title(main = org, line = -1)\n}\npar(mfrow = c(1, 1))\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n\nFor Organisation: It can be seen that Team Glitters does not have any pre-dominant topic area.\n\nOceanus City Council, Sailor Shift Team and Green Guardians seems to have common words like nemo, city, reef ,equipment and vessel, showing that they are more concerned about the environment.\n\nV. Miesel Shipping however, is more concerned about regulations as the most commonly used words are permit, operations and documentation.\n\n### Group by Person\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# (Assuming you already have mc3_nodes_final and mc3_edges_final loaded)\n\nlibrary(dplyr)\nlibrary(tidytext)\nlibrary(wordcloud)\n\n# 1. Extract communication‐event nodes with their new_index and content\ncomm_nodes <- mc3_nodes_final %>%\n  filter(type == \"Event\", sub_type == \"Communication\") %>%\n  select(event_index = new_index, content)\n\n# 2. Build a mapping from communication events to entities\nsend_map <- mc3_edges_final %>%\n  filter(type == \"sent\") %>%\n  transmute(entity_index = from, event_index = to)\n\nrecv_map <- mc3_edges_final %>%\n  filter(type == \"received\") %>%\n  transmute(event_index = from, entity_index = to)\n\nevent_to_entity <- bind_rows(send_map, recv_map)\n\n# 3. Join event_to_entity with comm_nodes, then keep only Person entities\ncomm_by_person <- event_to_entity %>%\n  inner_join(comm_nodes, by = \"event_index\") %>%\n  inner_join(\n    mc3_nodes_final %>% \n      select(entity_index = new_index, sub_type, label),\n    by = \"entity_index\"\n  ) %>%\n  filter(sub_type == \"Person\") %>%\n  select(person = label, content)\n\n# 4. Collapse all texts per person\nperson_texts <- comm_by_person %>%\n  group_by(person) %>%\n  summarize(text = paste(content, collapse = \" \"), .groups = \"drop\")\n\n# 5. Tokenize, remove stop‐words, and compute word frequencies per person\ntidy_person_words <- person_texts %>%\n  unnest_tokens(word, text) %>%\n  anti_join(stop_words, by = \"word\") %>%\n  count(person, word, sort = TRUE)\n\n# 6. Plot one word cloud per person\nperson_list <- unique(tidy_person_words$person)\nn_persons   <- length(person_list)\nn_cols      <- 4\nn_rows      <- ceiling(n_persons / n_cols)\n\npar(mfrow = c(n_rows, n_cols), mar = c(0, 0, 0, 0))\nfor (p in person_list) {\n  freq_tbl <- tidy_person_words %>% filter(person == p)\n  if (nrow(freq_tbl) == 0) {\n    plot.new()\n    title(main = p)\n    next\n  }\n  v <- setNames(freq_tbl$n, freq_tbl$word)\n  wordcloud(\n    words        = names(v),\n    freq         = as.numeric(v),\n    max.words    = 10,\n    scale        = c(3, 0.5),\n    random.order = FALSE\n  )\n  title(main = p, line = -1)\n}\npar(mfrow = c(1, 1))\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-23-1.png){width=1344}\n:::\n:::\n\n\n\n**For Person Subgroups:**\n\n**Top 3 Commonly Used Words:**\n\nMrs Money: Meeting, Nemo Reef, Intern\n\nThe Intern: Nemo Reef, Lookout, Money\n\nThe Lookout: Nemo Reef, Intern, tomorrow\n\nBoss: Nemo Reef, meeting, middleman\n\nThe Middleman: Nemo reef, boss, meeting\n\nThe Accountant: meeting, middleman, boss\n\n**It can be seen that these 6 people are in contact with each other as their most commonly used terms concern each other and usually revolves around Nemo Reef.**\n\nLiam Thorne: Nemo Reef, council, report\n\nNadia Conti: Nemo Reef, documentation, meeting\n\nRodriguez: Nemo reef, davis, remora\n\nSamantha Blake: Nemo Reef, tomorrow, city council\n\nElise: Nemo Reef, tomorrow, meeting\n\n**It can also be seen that these group of people have common schedules like meeting, tomorrow and City Council, and they are also concerned about Nemo Reef.**\n\nClepper Jensen: Miranda, equipment, environmental\n\nMiranda Jordan: Miranda, equipment, clepper Jensen\n\nDavis: Mako, security, equipment\n\nSam: birdwatching, lookout, reef\n\nMako: try, team, remora\n\nKelly: sam, kelly\n\n**These group of people here have different focus and do not have commonailities with the groups above.**\n\n### Group by Vessels\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Extract communication‐event nodes with their new_index and content\ncomm_nodes <- mc3_nodes_final %>%\n  filter(type == \"Event\", sub_type == \"Communication\") %>%\n  select(event_index = new_index, content)\n\n# 2. Build a mapping from communication events to entities (sender/receiver)\nsend_map <- mc3_edges_final %>%\n  filter(type == \"sent\") %>%\n  transmute(entity_index = from, event_index = to)\n\nrecv_map <- mc3_edges_final %>%\n  filter(type == \"received\") %>%\n  transmute(event_index = from, entity_index = to)\n\nevent_to_entity <- bind_rows(send_map, recv_map)\n\n# 3. Join event_to_entity with comm_nodes, then keep only Vessel entities\ncomm_by_vessel <- event_to_entity %>%\n  inner_join(comm_nodes, by = \"event_index\") %>%\n  inner_join(\n    mc3_nodes_final %>%\n      select(entity_index = new_index, sub_type, label),\n    by = \"entity_index\"\n  ) %>%\n  filter(sub_type == \"Vessel\") %>%      # <— change here\n  select(vessel = label, content)\n\n# 4. Collapse all texts per vessel\nvessel_texts <- comm_by_vessel %>%\n  group_by(vessel) %>%\n  summarize(text = paste(content, collapse = \" \"), .groups = \"drop\")\n\n# 5. Tokenize, remove stop‐words, and compute word frequencies per vessel\ntidy_vessel_words <- vessel_texts %>%\n  unnest_tokens(word, text) %>%\n  anti_join(stop_words, by = \"word\") %>%\n  count(vessel, word, sort = TRUE)\n\n# 6. Plot one word cloud per vessel\nvessel_list <- unique(tidy_vessel_words$vessel)\nn_vess   <- length(vessel_list)\nn_cols   <- 4\nn_rows   <- ceiling(n_vess / n_cols)\n\npar(mfrow = c(n_rows, n_cols), mar = c(0, 0, 0, 0))\nfor (ves in vessel_list) {\n  freq_tbl <- tidy_vessel_words %>% filter(vessel == ves)\n  if (nrow(freq_tbl) == 0) {\n    plot.new()\n    title(main = ves)\n    next\n  }\n  v <- setNames(freq_tbl$n, freq_tbl$word)\n  wordcloud(\n    words        = names(v),\n    freq         = as.numeric(v),\n    max.words    = 20,\n    scale        = c(3, 0.5),\n    random.order = FALSE\n  )\n  title(main = ves, line = -1)\n}\npar(mfrow = c(1, 1))\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/unnamed-chunk-24-1.png){width=1344}\n:::\n:::\n\n\n:::\n\n# Question 3\n\n::: panel-tabset\n### Daily Network Graph of Communication\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\n\ndaily_comms <- selected_nodes %>%\n  filter(type==\"Event\", sub_type==\"Communication\") %>%\n  mutate(date=as_date(timestamp)) %>%\n  select(idx, date)\n\nall_dates <- sort(unique(daily_comms$date)) %>% discard(is.na)\n\nplots <- map(all_dates, function(d) {\n  comm_idx <- daily_comms %>% filter(date==d) %>% pull(idx)\n  es <- selected_edges %>% filter(type==\"sent\", to %in% comm_idx) %>% transmute(comm=to, sender=from)\n  er <- selected_edges %>% filter(type==\"received\", from %in% comm_idx) %>% transmute(comm=from, receiver=to)\n  dp <- inner_join(es, er, by=\"comm\") %>% transmute(from=sender, to=receiver, type=\"sent\")\n  if (nrow(dp)==0) return(NULL)\n\n  nodes_d <- selected_nodes %>%\n    filter(idx %in% unique(c(dp$from, dp$to)), sub_type %in% c(\"Person\", \"Vessel\"))\n  dp <- dp %>% filter(from %in% nodes_d$idx, to %in% nodes_d$idx)\n  if (nrow(dp)==0) return(NULL)\n\n  nm <- tibble(old=nodes_d$idx, new=seq_len(nrow(nodes_d)))\n  edges2 <- dp %>%\n    left_join(nm, by=c(\"from\"=\"old\")) %>% mutate(from=new) %>% select(-new) %>%\n    left_join(nm, by=c(\"to\"=\"old\")) %>% mutate(to=new) %>% select(-new)\n  nodes2 <- nodes_d %>% mutate(idx2=seq_len(nrow(nodes_d)))\n\n  g <- tbl_graph(nodes=nodes2, edges=edges2, directed=TRUE)\n  lay <- create_layout(g, layout=\"fr\", niter=500, area=vcount(g)^2, repulse=vcount(g)^1.2)\n\n  ggraph(lay) +\n    geom_edge_link(aes(color=type),\n                   arrow=arrow(length=unit(4,\"mm\"), type=\"closed\"),\n                   alpha=0.8, width=1) +\n    geom_node_point(aes(color=sub_type), size=4) +\n    geom_node_text(aes(label=ifelse(sub_type %in% c(\"Person\",\"Vessel\"), label, \"\")),\n                   repel=TRUE, point.padding=unit(0.5,\"lines\"),\n                   box.padding=unit(0.5,\"lines\"), size=6) +\n    scale_edge_color_manual(values=c(sent=\"#7570B3\")) +\n    scale_color_manual(values=c(Person=\"#1b9e77\", Vessel=\"#d95f02\")) +\n    ggtitle(as.character(d)) +\n    theme_void() +\n    theme(plot.title=element_text(size=12,hjust=0.5), legend.position=\"right\")\n})\n\nwrap_plots(plots, ncol=2) +\n  plot_layout(guides=\"collect\") +\n  plot_annotation(title=\"MC3 Communications by Day\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex02_files/figure-html/mc3_daily_networks_direct_trimmed-1.png){width=1536}\n:::\n:::\n\n\n\n\n### Communication between People and Vessels\n\n**Additional visualisations are done below to further investigate the communication between the pseudonyms and real names.**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(visNetwork)\n\n# 1. Keep only Person/Vessel nodes, assigning colors by sub_type\nnodes <- selected_nodes %>%\n  filter(sub_type %in% c(\"Person\", \"Vessel\")) %>%\n  transmute(\n    id    = idx,\n    label = label,\n    color = ifelse(sub_type == \"Person\", \"#1b9e77\", \"#d95f02\")\n  )\n\n# 2. Build direct sender→receiver pairs from communication events\nes <- selected_edges %>%\n  filter(type == \"sent\") %>%\n  transmute(comm = to, sender = from)\ner <- selected_edges %>%\n  filter(type == \"received\") %>%\n  transmute(comm = from, receiver = to)\n\n# 3. Join on the communication node to get from→to, then count occurrences\ndp <- inner_join(es, er, by = \"comm\") %>%\n  transmute(from = sender, to = receiver)\n\nedges <- dp %>%\n  count(from, to, name = \"count\") %>%\n  filter(from %in% nodes$id, to %in% nodes$id) %>%\n  mutate(width = count, label = as.character(count))\n\n# 4. Draw a visNetwork: node colors by type, edge width and label by count\nvisNetwork(nodes, edges) %>%\n  visIgraphLayout(layout = \"layout_with_fr\", randomSeed = 123) %>%\n  visEdges(\n    arrows = \"to\",\n    color  = list(color = \"#AAAAAA\", highlight = \"#FF0000\"),\n    font   = list(align = \"middle\")\n  ) %>%\n  visOptions(\n    highlightNearest = TRUE,\n    nodesIdSelection = TRUE\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"visNetwork html-widget html-fill-item\" id=\"htmlwidget-560a2c4adb7b237140e1\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-560a2c4adb7b237140e1\">{\"x\":{\"nodes\":{\"id\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],\"label\":[\"Sam\",\"Kelly\",\"Nadia Conti\",\"Elise\",\"Liam Thorne\",\"Samantha Blake\",\"Davis\",\"Rodriguez\",\"Sailor Shift\",\"Clepper Jensen\",\"Miranda Jordan\",\"The Intern\",\"The Lookout\",\"The Accountant\",\"Mrs. Money\",\"The Middleman\",\"Boss\",\"Small Fry\",\"Neptune\",\"Marlin\",\"Serenity\",\"Mako\",\"Reef Guardian\",\"Horizon\",\"Seawatch\",\"EcoVigil\",\"Sentinel\",\"Osprey\",\"Defender\",\"Northern Light\",\"Remora\",\"Knowles\",\"Mariner's Dream\"],\"color\":[\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#1b9e77\",\"#d95f02\",\"#d95f02\",\"#d95f02\",\"#d95f02\",\"#d95f02\",\"#d95f02\",\"#d95f02\",\"#d95f02\",\"#d95f02\",\"#d95f02\",\"#d95f02\",\"#d95f02\",\"#d95f02\",\"#d95f02\",\"#d95f02\"],\"x\":[0.1924793051219909,0.2822629193793227,-0.3034718727231097,-0.1837473261421605,0.001094827309007007,-0.9972540624976652,-0.5840849992426778,-0.3370963602896473,0.8228402102240098,0.993498014620205,1,0.1467432361824526,-0.02513368156745854,0.1376339393609802,-0.1076054698394799,0.08726445932481774,-0.1987680649058816,-0.7303551484948692,-0.470333358053448,-0.5416472010223841,-0.7134686763180048,-0.5949010122516023,-0.4830976174704871,-0.3322353753722217,-0.5339582692229281,-0.1384541561980578,-0.3505258530758323,-1,-0.739935981088804,0.8180931198730268,-0.4687817525556189,-0.9371254381076185,-0.5086699220463475],\"y\":[0.5834086814249531,0.7969097464458801,-0.4718871178304395,-0.3320024616364774,-0.3976062345987612,-0.216302213595403,-0.662640446610129,-0.8383597644172296,0.4390250557945974,-0.1340174109469313,-0.3211282019282053,-0.1550311293376386,0.182867148032916,-1,-0.5402887278366177,-0.7639507217641158,-0.7000756146745967,-0.8332401723659679,-0.3860036287286153,-0.2386928581272741,-0.1645343728016035,-0.3656879822426864,-0.02271310043788743,0.1223089562816331,0.2806709471820721,-0.04074743319197471,-0.04629094403016487,-0.430504327740048,0.121664814874435,-0.9686130698737427,-0.6181133024580889,-0.7014015521929627,1]},\"edges\":{\"from\":[1,2,3,3,3,4,4,5,5,5,5,6,7,7,7,7,7,7,8,8,8,8,8,8,10,11,12,12,12,13,13,13,13,13,14,14,15,15,15,15,15,15,16,16,16,16,17,17,17,18,18,18,19,19,19,19,19,19,19,20,20,20,21,21,21,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,25,26,26,26,26,26,27,27,27,27,27,28,29,29,29,31,31,31,31,31,32,32],\"to\":[2,1,5,19,20,3,5,3,4,17,26,22,3,7,17,19,22,31,3,7,8,15,17,31,11,10,12,13,15,1,12,23,24,27,16,17,12,16,17,19,22,31,5,14,15,17,15,16,22,7,22,31,3,4,7,21,22,23,31,22,23,31,19,22,23,4,6,7,17,19,20,21,23,27,28,31,19,20,21,22,23,24,25,26,27,29,22,23,25,26,27,23,5,23,24,26,27,3,22,23,24,25,22,22,23,25,3,7,8,19,22,7,22],\"count\":[1,2,2,2,1,3,1,2,1,1,1,3,5,6,1,1,5,4,1,3,4,1,3,1,20,18,1,8,15,8,12,1,5,4,1,2,5,3,6,2,1,1,2,3,3,4,4,3,1,2,1,4,1,3,2,1,7,1,9,1,1,2,2,2,2,1,4,1,2,3,1,1,2,4,2,5,1,3,3,2,3,3,3,4,3,2,1,1,2,3,4,1,2,2,5,2,2,1,5,1,5,1,6,1,3,1,1,1,1,6,9,2,1],\"width\":[1,2,2,2,1,3,1,2,1,1,1,3,5,6,1,1,5,4,1,3,4,1,3,1,20,18,1,8,15,8,12,1,5,4,1,2,5,3,6,2,1,1,2,3,3,4,4,3,1,2,1,4,1,3,2,1,7,1,9,1,1,2,2,2,2,1,4,1,2,3,1,1,2,4,2,5,1,3,3,2,3,3,3,4,3,2,1,1,2,3,4,1,2,2,5,2,2,1,5,1,5,1,6,1,3,1,1,1,1,6,9,2,1],\"label\":[\"1\",\"2\",\"2\",\"2\",\"1\",\"3\",\"1\",\"2\",\"1\",\"1\",\"1\",\"3\",\"5\",\"6\",\"1\",\"1\",\"5\",\"4\",\"1\",\"3\",\"4\",\"1\",\"3\",\"1\",\"20\",\"18\",\"1\",\"8\",\"15\",\"8\",\"12\",\"1\",\"5\",\"4\",\"1\",\"2\",\"5\",\"3\",\"6\",\"2\",\"1\",\"1\",\"2\",\"3\",\"3\",\"4\",\"4\",\"3\",\"1\",\"2\",\"1\",\"4\",\"1\",\"3\",\"2\",\"1\",\"7\",\"1\",\"9\",\"1\",\"1\",\"2\",\"2\",\"2\",\"2\",\"1\",\"4\",\"1\",\"2\",\"3\",\"1\",\"1\",\"2\",\"4\",\"2\",\"5\",\"1\",\"3\",\"3\",\"2\",\"3\",\"3\",\"3\",\"4\",\"3\",\"2\",\"1\",\"1\",\"2\",\"3\",\"4\",\"1\",\"2\",\"2\",\"5\",\"2\",\"2\",\"1\",\"5\",\"1\",\"5\",\"1\",\"6\",\"1\",\"3\",\"1\",\"1\",\"1\",\"1\",\"6\",\"9\",\"2\",\"1\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"physics\":false},\"manipulation\":{\"enabled\":false},\"edges\":{\"smooth\":false,\"arrows\":\"to\",\"color\":{\"color\":\"#AAAAAA\",\"highlight\":\"#FF0000\"},\"font\":{\"align\":\"middle\"}},\"physics\":{\"stabilization\":false}},\"groups\":null,\"width\":null,\"height\":null,\"idselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":false,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false},\"main\":null,\"submain\":null,\"footer\":null,\"background\":\"rgba(0, 0, 0, 0)\",\"igraphlayout\":{\"type\":\"square\"},\"highlight\":{\"enabled\":true,\"hoverNearest\":false,\"degree\":1,\"algorithm\":\"all\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":false,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n:::\n\n## Q3 Part A \n\nThe pseudonyms used are:\n\n-   Boss\n\n-   The Intern\n\n-   Mrs Money\n\n-   The Lookout\n\n-   The Accountant\n\n-   The Middleman\n\n## Q3 Part B\n\nMy visualisations help to break down the communication on a daily basis and to draw the connections between the different people based on their communication groups.\n\nFrom the figures above, it can be seen that the Boss is mostly always on the receiving end of the communication, with the exception of Mako(Vessel). The ones who are in direct contact with Boss are Mrs Money, The Middleman, Rodriguez, Davis, Liam Thorne, The Accountant and Mako (Vessel).\n\nMrs Money, however, receives information mainly from The Intern.\n\nThe Lookout and The Intern, however, usually communicates in both directions, with The Intern usually on the receiving end of information.\n\nThe Accountant only got communicated with Boss on 11 October and he is often communicating with The Middleman.\n\nThe Lookout also sends informations to Sam.\n\n**There is a clear hierachy when sending information:**\n\nLookout -\\> Intern -\\> Mrs Money/The Accountant/The Middleman -\\> Boss\n\nLookout -\\> Sam\n\n\n## Q3 Part C\n\nThese visualisations have confirmed my understanding that Boss is likely the leader of the group and the Vessel that is in contact with boss is likely Mako for illegal activities. The illegal activities should be taking place around Nemo Reef or meetings are held around Nemo Reef. The ones of higher positions are probably Mrs Money, The Middleman and The Accountant who reports directly to Boss.\n\nRodriguez, Liam Thorne and Davis seem to be involved directly with The Boss as well.\n\nStrangely, Nadia Conti seems to be at the receiving end of the communciation from Elise, Davis and Rodriguez and only replies to Liam Thorne. Nadia Conti is also in contact with several vessels.\n\nThe Intern and The Lookout seems to be of the same position in the syndicate, but The Intern is the only one who communicates with Mrs Money.\n\nThe Lookout seems to be reporting to Sam as well, as the communication is always in 1 direction.\n\n**From all the previous analysis, I would like to conclude that Rodriguez and Davis are likely involved in the illegal activities as they are in direct contact with Boss. Sam is also likely involved as The Lookout reports to him frequently.**\n",
    "supporting": [
      "Take-Home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/vis-9.1.0/vis-network.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/vis-9.1.0/vis-network.min.js\"></script>\n<script src=\"../../site_libs/visNetwork-binding-2.1.2/visNetwork.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}